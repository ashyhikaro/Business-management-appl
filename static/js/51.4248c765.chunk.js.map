{"version":3,"file":"static/js/51.4248c765.chunk.js","mappings":"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","sources":["components/user-components/financePage.js"],"sourcesContent":["import '../../styles/components/finance-page.scss'\r\nimport '../../styles/pagination.scss'\r\nimport CyrillicFont from '../../fonts/FreeSans.ttf'\r\nimport burgerImg from '../../img/burger_menu.png'\r\n\r\nimport { useEffect, useState, lazy } from \"react\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable'\r\n\r\nimport { db } from '../../index';\r\n\r\nconst FinanceForm = lazy(() => import('./forms/financeForm'))\r\nconst SortPanelFinance = lazy(() => import('./forms/sortPanelFinance'))\r\n\r\nfunction Items({currentItems, regime, userData, openForm, handlePageClick, pageCount, deleteItem, incomes, costs, setIncomes, setCosts, finalSort, setSortRegime, category, setCategory, projectName, setProjectName, currency, setCurrency, mode, setMode, usersNoteId, setUsersNoteId}) {\r\n    function editOpenForm(event) {\r\n        setMode('edit')\r\n\r\n        if (mode === 'create' && document.querySelector('.finance__form').classList.contains('form_hiden')) {\r\n            openForm()\r\n        }\r\n\r\n        setUsersNoteId(event.target.getAttribute('itemID').toString())\r\n    }\r\n\r\n    const generatePDF = (target) => {\r\n        const id = target.id\r\n        const itemId = target.getAttribute('itemID')\r\n\r\n        const today = new Date()\r\n        const thisDay = {\r\n            day: String(today.getDay()).length > 1 ? String(today.getDay()) : '0'+String(today.getDay()),\r\n            month: String(today.getMonth()).length > 1 ? String(today.getMonth()) : '0'+String(today.getMonth()),\r\n            year: String(today.getFullYear()),\r\n        }\r\n        \r\n        let element\r\n\r\n        db.ref(regime).child(id).child(itemId).once('value', (elem) => {\r\n            element = elem.val()    \r\n        })\r\n    \r\n        const doc = new jsPDF('landscape', 'pt', 'a4')\r\n        doc.addFont(CyrillicFont, 'CyrillicFont', 'normal');\r\n\r\n        doc.setFont('CyrillicFont')\r\n        doc.setFontSize(26);\r\n        regime === 'income' ? doc.text(40, 50, 'Звіт про отримання прибутку') : doc.text(40, 50, 'Звіт про витрати')\r\n\r\n        const tableFont = 'CyrillicFont';\r\n        const tableFontSize = 14;\r\n        const tableFontSizeVal = 12;\r\n\r\n        const headStyles = {\r\n            font: tableFont,\r\n            fontSize: tableFontSize,\r\n        };\r\n        const bodyStyles = {\r\n            font: tableFont,\r\n            fontSize: tableFontSizeVal,\r\n        };\r\n\r\n        doc.autoTable({\r\n            head: [['Дата запису', 'Дата транзакції', 'Проєкт', 'Категорія', 'Сума']],\r\n            body: [\r\n              [element.DateOfCreation, element.Date, element.Project, element.Type, `${element.Value + ' ' + element.Currency}`],\r\n            ],\r\n            startY: 80,\r\n            headStyles,\r\n            bodyStyles,\r\n        })\r\n\r\n        doc.setFont('CyrillicFont')\r\n        doc.setFontSize(14);\r\n        doc.text(40, 200, 'Дата:')\r\n\r\n        doc.setFont('helvetica', 'italic')\r\n        doc.text(80, 200, `${thisDay.day+'-'+thisDay.month+'-'+thisDay.year}`)\r\n\r\n        regime === 'income' ? doc.save('Income_report') : doc.save('Expense_report')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"finance_main\">\r\n            <FinanceForm regime={regime} userData={userData} openForm={openForm} mode={mode} usersNoteId={usersNoteId}></FinanceForm>\r\n\r\n            <div className='finance_table_container'>\r\n                <div className='table'>\r\n                    <div className=\"table_titles\">\r\n                        <p className=\"table_title\">Дата</p>\r\n                        <p className=\"table_title\">Сума</p>\r\n                        <p className=\"table_title\">Категорія</p>\r\n                        <p className=\"table_title\">Проєкт</p>\r\n                        <p className=\"table_title\">Панель керування</p>\r\n                    </div>\r\n                    <div className='table_rows'>\r\n                        {currentItems.map((income, index) => \r\n                            <div className=\"table_row\" key={index}>\r\n\r\n                                <div className='item_date table_col'>\r\n                                    <p className='date'>{income.Date}</p>\r\n                                    <p className='date_of_creation'>{income.DateOfCreation}</p>\r\n                                </div> \r\n\r\n                                <div className='item_value table_col'>\r\n                                    {regime === 'income' ? \r\n                                        <p className='break_text value incomeValue'>+ {income.Value}</p>\r\n                                    :\r\n                                        <p className='break_text value costValue'>- {income.Value}</p>\r\n                                    }\r\n                                    \r\n                                    <p className='value_currency'>{income.Currency}</p>\r\n                                </div>\r\n\r\n                                <div className='item_type table_col'>\r\n                                    <p className='type'>{income.Type}</p>\r\n                                </div>\r\n\r\n                                <div className='item_project table_col'>\r\n                                    <p className='break_text project'>{income.Project}</p>\r\n                                </div>\r\n\r\n                                <div className='item_panel table_col'>\r\n                                    <button \r\n                                        className='receipt_btn btn'\r\n                                        onClick={(e)=>generatePDF(e.target)} \r\n                                        id={userData.id}\r\n                                        itemID={income.id}\r\n                                    >\r\n                                        PDF-звіт\r\n                                    </button>\r\n                                    <br />\r\n                                    <button \r\n                                        className='edit_btn btn' \r\n                                        onClick={editOpenForm} \r\n                                        id={userData.id}\r\n                                        itemID={income.id}\r\n                                    >\r\n                                        Редагувати\r\n                                    </button>\r\n                                    <br />\r\n                                    <button \r\n                                        className='delete_btn btn' \r\n                                        onClick={deleteItem} \r\n                                        id={userData.id} \r\n                                        itemID={income.id}\r\n                                    >\r\n                                        Видалити\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                {(regime === 'income' && (currentItems.length === 0 || incomes.length <= 10)) \r\n                    || (regime === 'costs' && (currentItems.length === 0 || costs.length <= 10)) ? null : \r\n                        <ReactPaginate\r\n                            breakLabel=\"...\"\r\n                            nextLabel=\"Далі >\"\r\n                            onPageChange={handlePageClick}\r\n                            pageRangeDisplayed={5}\r\n                            pageCount={pageCount}\r\n                            previousLabel=\"< Назад\"\r\n                            renderOnZeroPageCount={null}\r\n                            className='pagination_list'\r\n                        />\r\n                }\r\n            </div>\r\n\r\n            <SortPanelFinance \r\n                regime={regime} \r\n                incomes={incomes} \r\n                costs={costs} \r\n                setIncomes={setIncomes} \r\n                setCosts={setCosts}\r\n                finalSort={finalSort}\r\n                setSortRegime={setSortRegime}\r\n                userData={userData}\r\n                category={category}\r\n                setCategory={setCategory}\r\n                projectName={projectName}\r\n                setProjectName={setProjectName}\r\n                currency={currency}\r\n                setCurrency={setCurrency}\r\n            />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nfunction FinancePage({userData, amountOfIncome, setAmountOfIncome, amountOfExpenses, setAmountOfExpenses}) {\r\n    const [regime, setRegime] = useState('income')\r\n    const [mode, setMode] = useState('create')\r\n    const [incomes, setIncomes] = useState([])\r\n    const [costs, setCosts] = useState([])\r\n\r\n    const [usersNoteId, setUsersNoteId] = useState()\r\n\r\n    const [sortRegime, setSortRegime] = useState('')\r\n    const [category, setCategory] = useState('');\r\n    const [projectName, setProjectName] = useState('');\r\n    const [currency, setCurrency] = useState('');\r\n\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    let endOffset = itemOffset + 10\r\n    let pageCount = regime === 'income' ? Math.ceil(incomes.length / 10) : Math.ceil(costs.length / 10)\r\n    let currentItems = regime === 'income' ? incomes.slice(itemOffset, endOffset) : costs.slice(itemOffset, endOffset)\r\n\r\n    useEffect(() => {\r\n        db.ref(regime).child(userData.id).on('value', elem => {\r\n            let obj = elem.val()\r\n            let arr = []\r\n    \r\n            if (regime === 'income') {\r\n                for (let key in obj) {\r\n                    if (key !== '1') {\r\n                        arr.push({id: key, ...obj[key]})\r\n                    }\r\n                }\r\n                setIncomes(arr)\r\n                setAmountOfIncome(arr.reduce((prev, curr) => {\r\n                    switch (curr.Currency) {\r\n                        case \"USD\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 40;\r\n                        case \"EUR\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 40;\r\n                        case \"GBP\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 44;\r\n                        case \"JPY\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 0.3;\r\n                        case \"CNY\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 5.4;\r\n                        default:\r\n                            return parseFloat(prev) + parseFloat(curr.Value);\r\n                    }\r\n                }, 0))\r\n            } else {\r\n                for (let key in obj) {\r\n                    if (key !== '1') {\r\n                        arr.push({id: key, ...obj[key]})\r\n                    }\r\n                }\r\n                setCosts(arr)\r\n                setAmountOfExpenses(arr.reduce((prev, curr) => {\r\n                    switch (curr.Currency) {\r\n                        case \"USD\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 40;\r\n                        case \"EUR\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 40;\r\n                        case \"GBP\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 44;\r\n                        case \"JPY\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 0.3;\r\n                        case \"CNY\":\r\n                            return parseFloat(prev) + parseFloat(curr.Value) * 5.4;\r\n                        default:\r\n                            return parseFloat(prev) + parseFloat(curr.Value);\r\n                    }\r\n                }, 0))\r\n            }\r\n        })\r\n\r\n        setItemOffset(0)\r\n    }, [regime])\r\n\r\n    useEffect(() => {\r\n        if (!sortRegime) {\r\n            db.ref(regime).child(userData.id).on('value', elem => {\r\n                let obj = elem.val()\r\n                let arr = []\r\n        \r\n                if (regime === 'income') {\r\n                    for (let key in obj) {\r\n                        if (key !== '1') {\r\n                            arr.push({id: key, ...obj[key]})\r\n                        }\r\n                    }\r\n                    setIncomes(arr)\r\n                } else {\r\n                    for (let key in obj) {\r\n                        if (key !== '1') {\r\n                            arr.push({id: key, ...obj[key]})\r\n                        }\r\n                    }\r\n                    setCosts(arr)\r\n                }\r\n            })\r\n        }\r\n    }, [sortRegime])\r\n\r\n    const handlePageClick = (event) => {\r\n        let newOffset\r\n\r\n        if (regime === 'income') {\r\n            newOffset = (event.selected * 10) % incomes.length;\r\n        } else {\r\n            newOffset = (event.selected * 10) % costs.length;\r\n        }\r\n        \r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    const handleChangeRegime = (event) => {\r\n        setMode('create')\r\n\r\n        if(!document.querySelector('.finance__form').classList.contains('form_hiden')) {\r\n            openForm()\r\n        }\r\n\r\n        if (regime === 'income' && event.target.innerHTML !== 'Доходи') {\r\n            setRegime('costs')\r\n        }  else {\r\n            if (regime === 'income' && event.target.innerHTML === 'Доходи') {\r\n                return\r\n            } else {\r\n                if (regime === 'costs' && event.target.innerHTML !== 'Витрати') {\r\n                    setRegime('income')\r\n                } else {\r\n                    return\r\n                }\r\n            }\r\n        } \r\n\r\n        document.querySelectorAll('.finance_header__title').forEach(item => item.classList.remove('active'))\r\n        event.target.classList.toggle('active')\r\n    }\r\n\r\n    function openForm(backTriger) {\r\n        document.querySelector('.sort_panel_finances').classList.toggle('sort_panel_non_active')\r\n\r\n        if (mode === 'edit' && !document.querySelector('form').classList.contains('form_hiden')) {\r\n            setMode('create')\r\n            document.querySelector('form').classList.add('form_hiden')\r\n            document.querySelector('.sort_panel_finances').classList.add('sort_panel_non_active')\r\n        }\r\n\r\n        if (backTriger === 'back') {\r\n            document.querySelector('form').classList.add('form_hiden')\r\n            document.querySelector('.sort_panel_finances').classList.remove('sort_panel_non_active')\r\n        } else {\r\n            document.querySelector('form').classList.toggle('form_hiden')\r\n        }\r\n    }\r\n\r\n    function sumDateSort(arr, param, direction) {\r\n        return [...arr].sort(function(a, b) {\r\n            if (param === 'sum') {\r\n                let value1 = 0\r\n                let value2 = 0\r\n\r\n                switch (a.Currency) {\r\n                    case \"USD\":\r\n                        value1 = parseFloat(a.Value) * 40;\r\n                        break;\r\n                    case \"EUR\":\r\n                        value1 = parseFloat(a.Value) * 40;\r\n                        break;\r\n                    case \"GBP\":\r\n                        value1 = parseFloat(a.Value) * 44;\r\n                        break;\r\n                    case \"JPY\":\r\n                        value1 = parseFloat(a.Value) * 0.3;\r\n                        break;\r\n                    case \"CNY\":\r\n                        value1 = parseFloat(a.Value) * 5.4;\r\n                        break;\r\n                    default:\r\n                        value1 = parseFloat(a.Value);\r\n                }\r\n    \r\n                switch (b.Currency) {\r\n                    case \"USD\":\r\n                        value2 = parseFloat(b.Value) * 40;\r\n                        break;\r\n                    case \"EUR\":\r\n                        value2 = parseFloat(b.Value) * 40;\r\n                        break;\r\n                    case \"GBP\":\r\n                        value2 = parseFloat(b.Value) * 44;\r\n                        break;\r\n                    case \"JPY\":\r\n                        value2 = parseFloat(b.Value) * 0.3;\r\n                        break;\r\n                    case \"CNY\":\r\n                        value2 = parseFloat(b.Value) * 5.4;\r\n                        break;\r\n                    default:\r\n                        value2 = parseFloat(b.Value);\r\n                }\r\n\r\n                if (direction === 'top') {\r\n                    setSortRegime('sum/top')\r\n                        if (value1 > value2) {\r\n                            return 1\r\n                        } else {\r\n                            if (value1 < value2) {\r\n                                return -1\r\n                            } else {\r\n                                return 0\r\n                            }\r\n                        }\r\n                }\r\n                else {\r\n                    setSortRegime('sum/bottom')\r\n                    if (value1 < value2) {\r\n                        return 1\r\n                    } else {\r\n                        if (value1 > value2) {\r\n                            return -1\r\n                        } else {\r\n                            return 0\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (param === 'date') {\r\n                    let date1 = +a.Date.split('-').reverse().join('')\r\n                    let date2 = +b.Date.split('-').reverse().join('')\r\n\r\n                    if (direction === 'top') {\r\n                        setSortRegime('date/top')\r\n                        if (date1 > date2) {\r\n                            return 1\r\n                        } else {\r\n                            if (date1 < date2) {\r\n                                return -1\r\n                            } else {\r\n                                return 0\r\n                            }\r\n                        }\r\n                    } else {\r\n                        setSortRegime('date/bottom')\r\n                        if (date1 < date2) {\r\n                            return 1\r\n                        } else {\r\n                            if (date1 > date2) {\r\n                                return -1\r\n                            } else {\r\n                                return 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    function finalSort(sortedArr) {\r\n        let sortedArr2 = [...sortedArr]\r\n\r\n        if (sortRegime) {\r\n            if (sortRegime.split('/')[0] === 'sum') {\r\n                if (sortRegime.split('/')[1] === 'top') {\r\n                    sortedArr2 = sumDateSort(sortedArr, 'sum', 'top')\r\n                } else {\r\n                    sortedArr2 = sumDateSort(sortedArr, 'sum', 'bottom')\r\n\r\n                }\r\n            } else {\r\n                if (sortRegime.split('/')[0] === 'date') {\r\n                    if (sortRegime.split('/')[1] === 'top') {\r\n                        sortedArr2 = sumDateSort(sortedArr, 'date', 'top')\r\n                    } else {\r\n                        sortedArr2 = sumDateSort(sortedArr, 'date', 'bottom')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (category) {\r\n            sortedArr2 = sortedArr2.filter(item => item.Type === category)\r\n        }\r\n\r\n        if (projectName) {\r\n            sortedArr2 = sortedArr2.filter(item => item.Project.trim().toLowerCase().includes(projectName.trim().toLowerCase()))\r\n        }\r\n\r\n        if (currency) {\r\n            sortedArr2 = sortedArr2.filter(item => item.Currency === currency)\r\n        }\r\n\r\n        return sortedArr2\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        const userId = event.target.id\r\n        const itemId = event.target.getAttribute('itemID').toString()\r\n        db.ref(regime).child(userId).child(itemId).remove()\r\n\r\n        if (currentItems.length === 1) {\r\n            setItemOffset(0);\r\n        }\r\n\r\n        let sortedArr = []\r\n\r\n        db.ref(regime).child(userData.id).on('value', elem => {\r\n            let obj = elem.val()\r\n    \r\n            if (regime === 'income') {\r\n                for (let key in obj) {\r\n                    if (key !== '1') {\r\n                        sortedArr.push({id: key, ...obj[key]})\r\n                    }\r\n                }\r\n            } else {\r\n                for (let key in obj) {\r\n                    if (key !== '1') {\r\n                        sortedArr.push({id: key, ...obj[key]})\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        sortedArr = finalSort(sortedArr)\r\n\r\n        regime === 'income' ? setIncomes(sortedArr) : setCosts(sortedArr)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!document.querySelector('.menu_small_screen').classList.contains('hidden')) {\r\n            document.querySelector('.menu_small_screen').classList.add('hidden')\r\n            document.querySelector('.burger_btn_img').src = burgerImg\r\n        }\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"finance_page page\">\r\n            <h2 className='finance_page__title title'>Фінанси</h2>\r\n\r\n            <div className=\"finance_header\">\r\n                <div className='header_switcher'>\r\n                    <h3 onClick={handleChangeRegime} className='finance_header__title active'>Доходи</h3>\r\n                    <h3 onClick={handleChangeRegime} className='finance_header__title'>Витрати</h3>\r\n\r\n                    <button onClick={openForm} className='add_finance_btn'>\t&#10011;</button>\r\n                </div>\r\n\r\n                <div className='header_amounts'>\r\n                    {regime === 'income' ?\r\n                        <p className='amount_of_income'>Доходи: {amountOfIncome} UAH</p> :\r\n                        <p className='amount_of_income'>Витрати: {amountOfExpenses} UAH</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <Items \r\n                currentItems={currentItems}\r\n                regime={regime} \r\n                userData={userData} \r\n                openForm={openForm}\r\n                handlePageClick={handlePageClick}\r\n                pageCount={pageCount}\r\n                deleteItem={deleteItem}\r\n                incomes={incomes}\r\n                costs={costs}\r\n                setIncomes={setIncomes}\r\n                setCosts={setCosts}\r\n                finalSort={finalSort}\r\n                setSortRegime={setSortRegime}\r\n                category={category}\r\n                setCategory={setCategory}\r\n                projectName={projectName}\r\n                setProjectName={setProjectName}\r\n                currency={currency}\r\n                setCurrency={setCurrency}\r\n                mode={mode}\r\n                setMode={setMode}\r\n                usersNoteId={usersNoteId}\r\n                setUsersNoteId={setUsersNoteId}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default FinancePage;"],"names":["FinanceForm","lazy","SortPanelFinance","Items","currentItems","regime","userData","openForm","handlePageClick","pageCount","deleteItem","incomes","costs","setIncomes","setCosts","finalSort","setSortRegime","category","setCategory","projectName","setProjectName","currency","setCurrency","mode","setMode","usersNoteId","setUsersNoteId","editOpenForm","event","document","querySelector","classList","contains","target","getAttribute","toString","className","map","income","index","Date","DateOfCreation","Value","Currency","Type","Project","onClick","e","element","id","itemId","today","thisDay","String","getDay","length","getMonth","getFullYear","db","child","once","elem","val","doc","jsPDF","addFont","CyrillicFont","setFont","setFontSize","text","tableFont","headStyles","font","fontSize","bodyStyles","autoTable","head","body","startY","save","generatePDF","itemID","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","amountOfIncome","setAmountOfIncome","amountOfExpenses","setAmountOfExpenses","useState","setRegime","sortRegime","itemOffset","setItemOffset","endOffset","Math","ceil","slice","useEffect","on","obj","arr","key","push","reduce","prev","curr","parseFloat","handleChangeRegime","innerHTML","querySelectorAll","forEach","item","remove","toggle","backTriger","add","sumDateSort","param","direction","sort","a","b","value1","value2","date1","split","reverse","join","date2","sortedArr","sortedArr2","filter","trim","toLowerCase","includes","src","burgerImg","newOffset","selected","userId"],"sourceRoot":""}