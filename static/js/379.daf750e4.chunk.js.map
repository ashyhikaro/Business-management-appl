{"version":3,"file":"static/js/379.daf750e4.chunk.js","mappings":"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","sources":["components/user-components/homePage.js"],"sourcesContent":["import '../../styles/components/home-page.scss'\r\nimport burgerImg from '../../img/burger_menu.png'\r\n\r\nimport { useState, useEffect, lazy } from \"react\";\r\n\r\nimport { db } from '../../index';\r\n\r\n// import PieChart from '../graphics/PieChart';\r\n// import LineChart from \"../graphics/LineChart\";\r\n\r\nconst LineChart = lazy(() => import('../graphics/LineChart'))\r\nconst PieChart = lazy(() => import('../graphics/PieChart'))\r\n\r\nfunction MainPage({userData}) {\r\n    const today = new Date() \r\n    const days = [\"Неділя\", \"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\", \"Субота\"];\r\n    const months = [\"січня\", \"лютого\", \"березня\", \"квітня\", \"травня\", \"червня\", \"липня\", \"серпня\", \"вересня\", \"жовтня\", \"листопада\", \"грудня\"];\r\n\r\n    const dayOfWeek = days[today.getDay()]\r\n    const dayOfMonth = today.getDate()\r\n    const month = months[today.getMonth()]\r\n\r\n    let textMonth = String(today.getMonth() + 1)\r\n\r\n    if (textMonth.length < 2) {\r\n        textMonth = '0' + textMonth\r\n    }\r\n\r\n    const [incomes, setIncomes] = useState(0)\r\n    const [expenses, setExpenses] = useState(0)\r\n    const [loansIn, setLoansIn] = useState(0)\r\n    const [loansOut, setLoansOut] = useState(0)\r\n\r\n    const [finances, setFinances] = useState([])\r\n    const [incomesArr, setIncomesArr] = useState([])\r\n    const [costsArr, setCostsArr] = useState([])\r\n\r\n    useEffect(() => {\r\n        db.ref('income').child(userData.id).on('value', elem => {\r\n            let obj = elem.val()\r\n            let arr = []\r\n    \r\n            for (let key in obj) {\r\n                if (key !== '1' && obj[key].Date.split('-')[1] === textMonth) {\r\n                    arr.push({id: key, ...obj[key]})\r\n                }\r\n            }\r\n\r\n            setIncomesArr(arr)\r\n            setIncomes(arr.reduce((prev, curr) => {\r\n                switch (curr.Currency) {\r\n                    case \"USD\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 40;\r\n                    case \"EUR\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 40;\r\n                    case \"GBP\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 44;\r\n                    case \"JPY\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 0.3;\r\n                    case \"CNY\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 5.4;\r\n                    default:\r\n                        return parseFloat(prev) + parseFloat(curr.Value);\r\n                }\r\n            }, 0))\r\n        })\r\n\r\n        db.ref('costs').child(userData.id).on('value', elem => {\r\n            let obj = elem.val()\r\n            let arr = []\r\n            \r\n            for (let key in obj) {\r\n                if (key !== '1' && obj[key].Date.split('-')[1] === textMonth) {\r\n                    arr.push({id: key, ...obj[key]})\r\n                }\r\n            }\r\n\r\n            setCostsArr(arr)\r\n            setExpenses(arr.reduce((prev, curr) => {\r\n                switch (curr.Currency) {\r\n                    case \"USD\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 40;\r\n                    case \"EUR\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 40;\r\n                    case \"GBP\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 44;\r\n                    case \"JPY\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 0.3;\r\n                    case \"CNY\":\r\n                        return parseFloat(prev) + parseFloat(curr.Value) * 5.4;\r\n                    default:\r\n                        return parseFloat(prev) + parseFloat(curr.Value);\r\n                }\r\n            }, 0))\r\n        })\r\n\r\n        db.ref('loans').child(userData.id).on('value', elem => {\r\n            let obj = elem.val()\r\n            let arrIn = []\r\n            let arrOut = []\r\n            \r\n            for (let key in obj) {\r\n                if (key !== '1') {\r\n                    if (obj[key].Type === 'Ми винні') {\r\n                        arrOut.push({currency: obj[key].Currency, value: obj[key].Value})\r\n                    } else {\r\n                        arrIn.push({currency: obj[key].Currency, value: obj[key].Value})\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            setLoansIn(arrIn.reduce((prev, curr) => {\r\n                switch (curr.currency) {\r\n                    case \"USD\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 40;\r\n                    case \"EUR\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 40;\r\n                    case \"GBP\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 44;\r\n                    case \"JPY\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 0.3;\r\n                    case \"CNY\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 5.4;\r\n                    default:\r\n                        return parseFloat(prev) + parseFloat(curr.value);\r\n                }\r\n            }, 0))\r\n\r\n            setLoansOut(arrOut.reduce((prev, curr) => {\r\n                switch (curr.currency) {\r\n                    case \"USD\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 40;\r\n                    case \"EUR\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 40;\r\n                    case \"GBP\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 44;\r\n                    case \"JPY\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 0.3;\r\n                    case \"CNY\":\r\n                        return parseFloat(prev) + parseFloat(curr.value) * 5.4;\r\n                    default:\r\n                        return parseFloat(prev) + parseFloat(curr.value);\r\n                }\r\n            }, 0))\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!document.querySelector('.menu_small_screen').classList.contains('hidden')) {\r\n            document.querySelector('.menu_small_screen').classList.add('hidden')\r\n            document.querySelector('.burger_btn_img').src = burgerImg\r\n        }\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let arr = []\r\n\r\n        incomesArr.forEach((item, index) => {\r\n            let value\r\n\r\n            switch (item.Currency) {\r\n                case \"USD\":\r\n                    value = parseFloat(item.Value) * 40;\r\n                    break;\r\n                case \"EUR\":\r\n                    value = parseFloat(item.Value) * 40;\r\n                    break;\r\n                case \"GBP\":\r\n                    value = parseFloat(item.Value) * 44;\r\n                    break;\r\n                case \"JPY\":\r\n                    value = parseFloat(item.Value) * 0.3;\r\n                    break;\r\n                case \"CNY\":\r\n                    value = parseFloat(item.Value) * 5.4;\r\n                    break;\r\n                default:\r\n                    value = parseFloat(item.Value);\r\n            }\r\n\r\n            arr.push({\r\n                id: index,\r\n                day: item.Date.split('-')[0],\r\n                userGain: value,\r\n                userLost: 0\r\n            })\r\n\r\n        });\r\n\r\n        costsArr.forEach((item, index) => {\r\n            let value\r\n\r\n            switch (item.Currency) {\r\n                case \"USD\":\r\n                    value = parseFloat(item.Value) * 40;\r\n                    break;\r\n                case \"EUR\":\r\n                    value = parseFloat(item.Value) * 40;\r\n                    break;\r\n                case \"GBP\":\r\n                    value = parseFloat(item.Value) * 44;\r\n                    break;\r\n                case \"JPY\":\r\n                    value = parseFloat(item.Value) * 0.3;\r\n                    break;\r\n                case \"CNY\":\r\n                    value = parseFloat(item.Value) * 5.4;\r\n                    break;\r\n                default:\r\n                    value = parseFloat(item.Value);\r\n            }\r\n\r\n            arr.push({id: index, day: item.Date.split('-')[0], userGain: 0, userLost: value})\r\n\r\n        })\r\n\r\n        setFinances(arr)\r\n    }, [incomesArr, costsArr])\r\n\r\n    return (\r\n        <div className=\"home_page page\">\r\n            <header className=\"home__header\">\r\n                <h2 className=\"today_date\">{dayOfWeek}, {dayOfMonth} {month}</h2>\r\n            </header>\r\n            \r\n            <main className=\"home__main\">\r\n                <div className=\"main_finance\">\r\n                    <div className='finance__container'>\r\n                        <div>\r\n                            <h2 className='main_finance__title'>Фінанси компанії</h2>\r\n\r\n                            <div className='money_container'>\r\n                                <p className='container__title'>Прибутки</p>\r\n                                <p className='incomeValue'>{incomes} UAH</p>\r\n                            </div>\r\n                            <div className='money_container'>\r\n                                <p className='container__title'>Витрати</p>\r\n                                <p className='costValue'>{expenses} UAH</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                        <div>\r\n                            <h2 className='main_finance__title'>Депозити компанії</h2>\r\n\r\n                            <div className='money_container'>\r\n                                <p className='container__title'>Дебет</p>\r\n                                <p className='incomeValue'>{loansIn} UAH</p>\r\n                            </div>\r\n                            <div className='money_container'>\r\n                                <p className='container__title'>Кредит</p>\r\n                                <p className='costValue'>{loansOut} UAH</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main_statistic\">\r\n                    <LineChart title='Рух коштів за поточний місяць' finances={finances}/>\r\n                    <div className='statistic__pies'>\r\n                        <h2 style={{textAlign: 'center'}}>По категоріям</h2>\r\n                        <div className='pies__container'>\r\n                            <PieChart title='Прибутки' financeArr={incomesArr} financeType={'incomes'}/>\r\n                            <PieChart title='Витрати' financeArr={costsArr} financeType={'costs'}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;"],"names":["LineChart","lazy","PieChart","userData","today","Date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","textMonth","String","length","useState","incomes","setIncomes","expenses","setExpenses","loansIn","setLoansIn","loansOut","setLoansOut","finances","setFinances","incomesArr","setIncomesArr","costsArr","setCostsArr","useEffect","db","child","id","on","elem","obj","val","arr","key","split","push","reduce","prev","curr","Currency","parseFloat","Value","arrIn","arrOut","Type","currency","value","document","querySelector","classList","contains","add","src","burgerImg","forEach","item","index","day","userGain","userLost","className","title","style","textAlign","financeArr","financeType"],"sourceRoot":""}