{"version":3,"file":"static/js/171.32ff7c0c.chunk.js","mappings":"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","sources":["components/user-components/cashFlowPage.js"],"sourcesContent":["import '../../styles/components/cash-flow-page.scss'\r\nimport 'react-datalist-input/dist/styles.css';\r\nimport burgerImg from '../../img/burger_menu.png'\r\n\r\nimport DatalistInput, { useComboboxControls } from 'react-datalist-input';\r\nimport { useEffect, useState, lazy } from 'react';\r\n\r\nimport { db } from '../..';\r\n\r\nconst LineChart = lazy(() => import('../graphics/LineChart'))\r\nconst PieChart = lazy(() => import('../graphics/PieChart'))\r\nconst BarChart = lazy(() => import('../graphics/BarChart'))\r\nconst MixedLineChart = lazy(() => import('../graphics/MixedLineChart'))\r\nconst PolarAreaChart = lazy(() => import('../graphics/PolarAreaChart'))\r\n\r\nfunction CashFlowPage({userData}) {\r\n    const months = [\"Січень\", \"Лютий\", \"Березень\", \"Квітень\", \"Травень\", \"Червень\", \"Липень\", \"Серпень\", \"Вересень\", \"Жовтень\", \"Листопад\", \"Грудень\"];\r\n\r\n    const [biden, HelloBiden] = useState(true)\r\n    const [ diagramState, setDiagramState ] = useState('line')\r\n    const [ compare, setCompare ] = useState(false)\r\n\r\n    const presentYear = String(new Date().getFullYear())\r\n    const presentMonth = String(new Date().getMonth() + 1)\r\n\r\n    const [yearFinance, setYearFinance] = useState(presentYear);\r\n    const [monthFinance, setMonthFinance] = useState(months[presentMonth - 1]);\r\n\r\n    let incomesArrLine = getFinancesToChart(presentMonth.length < 2 ? '0' + presentMonth : presentMonth, 'income', 'line')\r\n    if (incomesArrLine.length > 0 && incomesArrLine[0] !== 0) {\r\n        localStorage.setItem('incomesArrLineCash', JSON.stringify(incomesArrLine))\r\n    }\r\n\r\n    let costsArrLine = getFinancesToChart(presentMonth.length < 2 ? '0' + presentMonth : presentMonth, 'costs', 'line')\r\n    if (costsArrLine.length > 0 && costsArrLine[0] !== 0) {\r\n        localStorage.setItem('costsArrLineCash', JSON.stringify(costsArrLine))\r\n    }\r\n\r\n    let incomesArrPie = getFinancesToChart(presentMonth.length < 2 ? '0' + presentMonth : presentMonth, 'income', 'pie')\r\n    if (incomesArrPie.length > 0 && incomesArrPie[0] !== 0) {\r\n        localStorage.setItem('incomesArrPieCash', JSON.stringify(incomesArrPie))\r\n    }\r\n    \r\n    let costsArrPie = getFinancesToChart(presentMonth.length < 2 ? '0' + presentMonth : presentMonth, 'costs', 'pie')\r\n    if (costsArrPie.length > 0 && costsArrPie[0] !== 0) {\r\n        localStorage.setItem('costsArrPieCash', JSON.stringify(costsArrPie))\r\n    }\r\n\r\n    if (monthFinance === months[presentMonth - 1]) {\r\n        if (JSON.parse((localStorage.getItem('incomesArrLine'))) !== incomesArrLine && incomesArrLine.length >= 1 && incomesArrLine[0] !== 0) {\r\n            localStorage.setItem('incomesArrLine', JSON.stringify(incomesArrLine))\r\n        }\r\n    \r\n        if (JSON.parse(localStorage.getItem('costsArrLine')) !== costsArrLine && costsArrLine.length >= 1 && costsArrLine[0] !== 0) {\r\n            localStorage.setItem('costsArrLine', JSON.stringify(costsArrLine))\r\n        }\r\n    \r\n        if (JSON.parse(localStorage.getItem('incomesArrPie')) !== incomesArrPie && incomesArrPie.length >= 1 && incomesArrPie[0] !== 0) {\r\n            localStorage.setItem('incomesArrPie', JSON.stringify(incomesArrPie))\r\n        }\r\n    \r\n        if (JSON.parse(localStorage.getItem('costsArrPie')) !== costsArrPie && costsArrPie.length >= 1 && costsArrPie[0] !== 0) {\r\n            localStorage.setItem('costsArrPie', JSON.stringify(costsArrPie))\r\n        }\r\n\r\n        if (incomesArrLine[0] === 0 || incomesArrLine === []) {\r\n            localStorage.setItem('incomesArrLine', localStorage.getItem('incomesArrLineCash'))\r\n            localStorage.setItem('costsArrLine', localStorage.getItem('costsArrLineCash'))\r\n            localStorage.setItem('incomesArrPie', localStorage.getItem('incomesArrPieCash'))\r\n            localStorage.setItem('costsArrPie', localStorage.getItem('costsArrPieCash'))\r\n        }\r\n    }\r\n\r\n    function getFinancesByMonth(month, financeType) {\r\n        let financeArr = []\r\n        \r\n        try {\r\n            db.ref(financeType).child(userData.id).on('value', elem => {\r\n                let obj = elem.val()\r\n                \r\n                for (let key in obj) {\r\n                    if (key !== '1' && (obj[key].Date.split('-')[2] === yearFinance && obj[key].Date.split('-')[1] === month)) {\r\n                        financeArr.push({id: key, ...obj[key]})\r\n                    }\r\n                }\r\n            })\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n        return financeArr\r\n    }\r\n\r\n    function getFinancesToChart(month, financeType, chartType) {\r\n        let financesData = []\r\n        const financeArr = getFinancesByMonth(month, financeType)\r\n\r\n        if (chartType === 'pie' || chartType === 'polar') {\r\n            return financeArr\r\n        }\r\n\r\n        financeArr.forEach((item, index) => {\r\n            let value\r\n\r\n            switch (item.Currency) {\r\n                case \"USD\":\r\n                    value = parseFloat(item.Value) * 40;\r\n                    break;\r\n                case \"EUR\":\r\n                    value = parseFloat(item.Value) * 40;\r\n                    break;\r\n                case \"GBP\":\r\n                    value = parseFloat(item.Value) * 44;\r\n                    break;\r\n                case \"JPY\":\r\n                    value = parseFloat(item.Value) * 0.3;\r\n                    break;\r\n                case \"CNY\":\r\n                    value = parseFloat(item.Value) * 5.4;\r\n                    break;\r\n                default:\r\n                    value = parseFloat(item.Value);\r\n            }\r\n\r\n            financesData.push({\r\n                id: index, \r\n                day: item.Date.split('-')[0], \r\n                userGain: financeType === 'income' ? value : 0, \r\n                userLost: financeType === 'costs' ? value : 0\r\n            })\r\n        });\r\n\r\n        if (financesData.length > 0) {\r\n            return financesData\r\n        } else {\r\n            return [0]\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        const monthIndex = String(months.indexOf(monthFinance) + 1).length < 2 ? '0' + String(months.indexOf(monthFinance) + 1) \r\n        : String(months.indexOf(monthFinance) + 1)\r\n        \r\n        const incomeArr = getFinancesToChart(monthIndex, 'income', diagramState)\r\n        const costsArr = getFinancesToChart(monthIndex, 'costs', diagramState)\r\n\r\n        if (diagramState === 'line' || diagramState === 'bar') {\r\n            if (JSON.parse((localStorage.getItem('incomesArrLine'))) !== incomeArr && incomeArr.length >= 1 && incomeArr[0] !== 0) {\r\n                localStorage.setItem('incomesArrLine', JSON.stringify(incomeArr))\r\n            }\r\n        \r\n            if (JSON.parse(localStorage.getItem('costsArrLine')) !== costsArr && costsArr.length >= 1 && costsArr[0] !== 0) {\r\n                localStorage.setItem('costsArrLine', JSON.stringify(costsArr))\r\n            }\r\n\r\n            if ((JSON.parse((localStorage.getItem('incomesArrLine'))) !== incomeArr && incomeArr.length >= 1 && incomeArr[0] !== 0) && costsArr.length === 1) {\r\n                localStorage.setItem('costsArrLine', JSON.stringify(costsArr))\r\n            }\r\n\r\n            if ((JSON.parse(localStorage.getItem('costsArrLine')) !== costsArr && costsArr.length >= 1 && costsArr[0] !== 0) && incomeArr.length === 1) {\r\n                localStorage.setItem('incomesArrLine', JSON.stringify(incomeArr))\r\n            }\r\n        }\r\n        \r\n        if (diagramState === 'pie' || diagramState === 'polar') {\r\n            if (JSON.parse(localStorage.getItem('incomesArrPie')) !== incomeArr && incomeArr.length >= 1 && incomeArr[0] !== 0) {\r\n                localStorage.setItem('incomesArrPie', JSON.stringify(incomeArr))\r\n            }\r\n        \r\n            if (JSON.parse(localStorage.getItem('costsArrPie')) !== costsArr && costsArr.length >= 1 && costsArr[0] !== 0) {\r\n                localStorage.setItem('costsArrPie', JSON.stringify(costsArr))\r\n            }\r\n\r\n            if ((JSON.parse(localStorage.getItem('incomesArrPie')) !== incomeArr && incomeArr.length >= 1 && incomeArr[0] !== 0) && costsArr.length === 0) {\r\n                localStorage.setItem('costsArrPie', JSON.stringify(costsArr))\r\n            }\r\n\r\n            if ((JSON.parse(localStorage.getItem('costsArrPie')) !== costsArr && costsArr.length >= 1 && costsArr[0] !== 0) && incomeArr.length === 0) {\r\n                localStorage.setItem('incomesArrPie', JSON.stringify(incomeArr))\r\n            }\r\n        }\r\n\r\n        if ((yearFinance !== presentYear || String(months.indexOf(monthFinance) + 1) !== presentMonth) && ((incomeArr[0] === 0 && costsArr[0] === 0) || (incomeArr.length === 0 && costsArr.length === 0))) {\r\n            localStorage.setItem('err', 'Немає інформації про даний період')\r\n        } else {\r\n            localStorage.removeItem('err')\r\n        }\r\n\r\n        HelloBiden(prev => !prev)\r\n    }, [yearFinance, monthFinance, diagramState])\r\n\r\n    useEffect(() => {\r\n        if (!document.querySelector('.menu_small_screen').classList.contains('hidden')) {\r\n            document.querySelector('.menu_small_screen').classList.add('hidden')\r\n            document.querySelector('.burger_btn_img').src = burgerImg\r\n        }\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1 className=\"title\">Аналітика</h1>\r\n\r\n            <div className='chart_category__container'>\r\n                <h2>Вид діаграми:</h2>\r\n                <div className='categories'>\r\n                    <div className='categories__btns'>\r\n                        <button className='line' onClick={() => setDiagramState('line')}>Лінійна</button>\r\n                        <button className='bar' onClick={() => setDiagramState('bar')}>Стовпчикова</button>\r\n                        <button className='pie' onClick={() => setDiagramState('pie')}>Секторна</button>\r\n                        <button className='polar' onClick={() => setDiagramState('polar')}>Мультирівнева</button>\r\n                    </div>\r\n\r\n                    <div className='chart_date'>\r\n                        <DatalistInput\r\n                            value={yearFinance}\r\n                            setValue={setYearFinance}\r\n                            placeholder={presentYear}\r\n                            items={[\r\n                                { id: 0, value: String(+presentYear - 5) },\r\n                                { id: 1, value: String(+presentYear - 4) },\r\n                                { id: 2, value: String(+presentYear - 3) },\r\n                                { id: 3, value: String(+presentYear - 2) },\r\n                                { id: 4, value: String(+presentYear - 1) },\r\n                                { id: 5, value: presentYear },\r\n                                { id: 6, value: String(+presentYear + 1) },\r\n                                { id: 7, value: String(+presentYear + 2) },\r\n                                { id: 8, value: String(+presentYear + 3) },\r\n                                { id: 9, value: String(+presentYear + 4) },\r\n                                { id: 10, value: String(+presentYear + 5) },\r\n                            ]}\r\n                        />\r\n\r\n                        <DatalistInput\r\n                            value={monthFinance}\r\n                            setValue={setMonthFinance}\r\n                            placeholder={months[presentMonth - 1]}\r\n                            items={[\r\n                                { id: 0, value: 'Січень' },\r\n                                { id: 1, value: 'Лютий' },\r\n                                { id: 2, value: 'Березень' },\r\n                                { id: 3, value: 'Квітень' },\r\n                                { id: 4, value: 'Травень' },\r\n                                { id: 5, value: 'Червень' },\r\n                                { id: 6, value: 'Липень' },\r\n                                { id: 7, value: 'Серпень' },\r\n                                { id: 8, value: 'Вересень' },\r\n                                { id: 9, value: 'Жовтень' },\r\n                                { id: 10, value: 'Листопад' },\r\n                                { id: 11, value: 'Грудень' },\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {localStorage.getItem('err') ? <p className='data_err__message'>*Немає інформації про даний період</p> : null}\r\n\r\n            </div>\r\n\r\n            {diagramState === 'line' ? <button className='btn' onClick={() => setCompare(prev => !prev)}>Порівняти</button> : null}\r\n\r\n            {diagramState === 'line' && !compare ? <div className='line_charts charts__container'>\r\n                <div className='chart__container'>\r\n                    <LineChart title={'Прибутки'} finances={JSON.parse(localStorage.getItem('incomesArrLine'))}/>\r\n                </div>\r\n                <div className='chart__container'>\r\n                    <LineChart title={'Витрати'} finances={JSON.parse(localStorage.getItem('costsArrLine'))}/>\r\n                </div>\r\n            </div> : null}\r\n\r\n            {diagramState === 'line' && compare ? \r\n                <MixedLineChart \r\n                    incomes={JSON.parse(localStorage.getItem('incomesArrLine'))} \r\n                    costs={JSON.parse(localStorage.getItem('costsArrLine'))}\r\n                /> \r\n            : null}\r\n\r\n            {diagramState === 'bar' ? <div className='bar_charts charts__container'>\r\n                <div className='chart__container'>\r\n                    <BarChart title={'Прибутки'} financeArr={JSON.parse(localStorage.getItem('incomesArrLine'))} financeType={'incomes'} barType={'month'}/>\r\n                </div>\r\n                <div className='chart__container'>\r\n                    <BarChart title={'Витрати'} financeArr={JSON.parse(localStorage.getItem('costsArrLine'))} financeType={'costs'} barType={'month'}/>\r\n                </div>\r\n            </div> : null}\r\n            \r\n            {diagramState === 'pie' ? <div className='pie_charts charts__container'>\r\n                <div className='chart__container'>\r\n                    <PieChart title={'Прибутки за категоріями'} financeArr={JSON.parse(localStorage.getItem('incomesArrPie'))} financeType={'incomes'}/>\r\n                </div>\r\n                <div className='chart__container'>\r\n                    <PieChart title={'Витрати за категоріями'} financeArr={JSON.parse(localStorage.getItem('costsArrPie'))} financeType={'costs'}/>\r\n                </div>\r\n            </div> : null}\r\n\r\n            {diagramState === 'polar' ? <div className='pie_charts charts__container'>\r\n                <div className='chart__container'>\r\n                    <PolarAreaChart title={'Прибутки за категоріями'} financeArr={JSON.parse(localStorage.getItem('incomesArrPie'))} financeType={'incomes'}/>\r\n                </div>\r\n                <div className='chart__container'>\r\n                    <PolarAreaChart title={'Витрати за категоріями'} financeArr={JSON.parse(localStorage.getItem('costsArrPie'))} financeType={'costs'}/>\r\n                </div>\r\n            </div> : null}\r\n\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default CashFlowPage;"],"names":["LineChart","lazy","PieChart","BarChart","MixedLineChart","PolarAreaChart","userData","months","useState","HelloBiden","diagramState","setDiagramState","compare","setCompare","presentYear","String","Date","getFullYear","presentMonth","getMonth","yearFinance","setYearFinance","monthFinance","setMonthFinance","incomesArrLine","getFinancesToChart","length","localStorage","setItem","JSON","stringify","costsArrLine","incomesArrPie","costsArrPie","month","financeType","chartType","financesData","financeArr","db","child","id","on","elem","obj","val","key","split","push","e","console","log","getFinancesByMonth","forEach","item","index","value","Currency","parseFloat","Value","day","userGain","userLost","parse","getItem","useEffect","monthIndex","indexOf","incomeArr","costsArr","removeItem","prev","document","querySelector","classList","contains","add","src","burgerImg","className","onClick","setValue","placeholder","items","title","finances","incomes","costs","barType"],"sourceRoot":""}