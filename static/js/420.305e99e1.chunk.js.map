{"version":3,"file":"static/js/420.305e99e1.chunk.js","mappings":"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","sources":["components/user-components/loanPage.js"],"sourcesContent":["import '../../styles/components/loan-page.scss'\r\nimport '../../styles/pagination.scss'\r\nimport burgerImg from '../../img/burger_menu.png'\r\nimport CyrillicFont from '../../fonts/FreeSans.ttf'\r\n\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable'\r\n\r\nimport { useEffect, useState, lazy } from \"react\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport { db } from '../../index';\r\n\r\nconst LoanForm = lazy(() => import('./forms/loanForm'))\r\nconst SortPanelLoans = lazy(() => import('./forms/sortPanelLoans'))\r\n\r\nfunction LoanPage({userData}) {\r\n    const [loans, setLoans] = useState([])\r\n    const [mode, setMode] = useState('create')\r\n    const [usersNoteId, setUsersNoteId] = useState()\r\n\r\n    const [sortRegime, setSortRegime] = useState('')\r\n    const [category, setCategory] = useState('');\r\n    const [nameOfParty, setNameOfParty] = useState('');\r\n    const [currency, setCurrency] = useState('');\r\n    const [paidOutStatus, setPaidOutStatus] = useState('');\r\n\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    let endOffset = itemOffset + 10\r\n    let pageCount =  loans ? Math.ceil(loans.length / 10) : null\r\n    let currentItems = loans ? loans.slice(itemOffset, endOffset) : null\r\n\r\n    function openForm(backTriger) {\r\n        document.querySelector('.sort_panel_loans').classList.toggle('sort_panel_non_active')\r\n\r\n        if (mode === 'edit' && !document.querySelector('form').classList.contains('form_hiden')) {\r\n            setMode('create')\r\n            document.querySelector('form').classList.add('form_hiden')\r\n            document.querySelector('.sort_panel').classList.add('sort_panel_non_active')\r\n        }\r\n\r\n        if (backTriger === 'back') {\r\n            document.querySelector('form').classList.add('form_hiden')\r\n            document.querySelector('.sort_panel').classList.remove('sort_panel_non_active')\r\n        } else {\r\n            document.querySelector('form').classList.toggle('form_hiden')\r\n        }\r\n        \r\n    }\r\n\r\n    function editOpenForm(event) {\r\n        setMode('edit')\r\n\r\n        if (mode === 'create' && document.querySelector('.finance__form').classList.contains('form_hiden')) {\r\n            openForm()\r\n        }\r\n        \r\n        setUsersNoteId(event.target.getAttribute('itemID').toString())\r\n    }\r\n\r\n    const handlePageClick = (event) => {\r\n        let newOffset\r\n        newOffset = (event.selected * 10) % loans.length;\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    function sumDateSort(arr, param, direction) {\r\n        return [...arr].sort(function(a, b) {\r\n            if (param === 'sum') {\r\n                let value1 = 0\r\n                let value2 = 0\r\n\r\n                let aType = a.Currency\r\n                let bType = b.Currency\r\n\r\n                switch (aType) {\r\n                    case \"USD\":\r\n                        value1 = parseFloat(a.Value) * 40;\r\n                        break;\r\n                    case \"EUR\":\r\n                        value1 = parseFloat(a.Value) * 40;\r\n                        break;\r\n                    case \"GBP\":\r\n                        value1 = parseFloat(a.Value) * 44;\r\n                        break;\r\n                    case \"JPY\":\r\n                        value1 = parseFloat(a.Value) * 0.3;\r\n                        break;\r\n                    case \"CNY\":\r\n                        value1 = parseFloat(a.Value) * 5.4;\r\n                        break;\r\n                    default:\r\n                        value1 = parseFloat(a.Value);\r\n                }\r\n    \r\n                switch (bType) {\r\n                    case \"USD\":\r\n                        value2 = parseFloat(b.Value) * 40;\r\n                        break;\r\n                    case \"EUR\":\r\n                        value2 = parseFloat(b.Value) * 40;\r\n                        break;\r\n                    case \"GBP\":\r\n                        value2 = parseFloat(b.Value) * 44;\r\n                        break;\r\n                    case \"JPY\":\r\n                        value2 = parseFloat(b.Value) * 0.3;\r\n                        break;\r\n                    case \"CNY\":\r\n                        value2 = parseFloat(b.Value) * 5.4;\r\n                        break;\r\n                    default:\r\n                        value2 = parseFloat(b.Value);\r\n                }\r\n\r\n                if (direction === 'top') {\r\n                    setSortRegime('sum/top')\r\n                    if (value1 > value2) {\r\n                        return 1\r\n                    } else {\r\n                        if (value1 < value2) {\r\n                            return -1\r\n                        } else {\r\n                            return 0\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    setSortRegime('sum/bottom')\r\n                    if (value1 < value2) {\r\n                        return 1\r\n                    } else {\r\n                        if (value1 > value2) {\r\n                            return -1\r\n                        } else {\r\n                            return 0\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (param === 'date') {\r\n                    let date1 = +a.Date.split('-').reverse().join('')\r\n                    let date2 = +b.Date.split('-').reverse().join('')\r\n\r\n                    if (direction === 'top') {\r\n                        setSortRegime('date/top')\r\n                        if (date1 > date2) {\r\n                            return 1\r\n                        } else {\r\n                            if (date1 < date2) {\r\n                                return -1\r\n                            } else {\r\n                                return 0\r\n                            }\r\n                        }\r\n                    } else {\r\n                        setSortRegime('date/bottom')\r\n                        if (date1 < date2) {\r\n                            return 1\r\n                        } else {\r\n                            if (date1 > date2) {\r\n                                return -1\r\n                            } else {\r\n                                return 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    function finalSort(sortedArr) {\r\n        let sortedArr2 = [...sortedArr]\r\n\r\n        if (sortRegime) {\r\n            if (sortRegime.split('/')[0] === 'sum') {\r\n                if (sortRegime.split('/')[1] === 'top') {\r\n                    sortedArr2 = sumDateSort(sortedArr, 'sum', 'top')\r\n                } else {\r\n                    sortedArr2 = sumDateSort(sortedArr, 'sum', 'bottom')\r\n                }\r\n            } else {\r\n                if (sortRegime.split('/')[0] === 'date') {\r\n                    if (sortRegime.split('/')[1] === 'top') {\r\n                        sortedArr2 = sumDateSort(sortedArr, 'date', 'top')\r\n                    } else {\r\n                        sortedArr2 = sumDateSort(sortedArr, 'date', 'bottom')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (category) {\r\n            sortedArr2 = sortedArr2.filter(item => item.Type === category)\r\n        }\r\n\r\n        if (nameOfParty) {\r\n            sortedArr2 = sortedArr2.filter(item => item.Name.trim().toLowerCase().includes(nameOfParty.trim().toLowerCase()))\r\n        }\r\n\r\n        if (currency) {\r\n            sortedArr2 = sortedArr2.filter(item => item.Currency === currency)\r\n        }\r\n\r\n        if (paidOutStatus) {\r\n            if (paidOutStatus === 'Сплачено') {\r\n                sortedArr2 = sortedArr2.filter(item => item.PaidOut === true)\r\n            } else {\r\n                sortedArr2 = sortedArr2.filter(item => item.PaidOut === false)\r\n            }\r\n        }\r\n\r\n        return sortedArr2\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        const userId = event.target.id\r\n        const itemId = event.target.getAttribute('itemID').toString()\r\n        db.ref(\"loans\").child(userId).child(itemId).remove()\r\n\r\n        if (currentItems.length === 1) {\r\n            setItemOffset(0);\r\n        }\r\n\r\n        let sortedArr = []\r\n\r\n        db.ref(\"loans\").child(userData.id).on('value', elem => {\r\n            let obj = elem.val()\r\n\r\n            for (let key in obj) {\r\n                if (key !== '1') {\r\n                    sortedArr.push({id: key, ...obj[key]})\r\n                }\r\n            }\r\n        })\r\n\r\n        sortedArr = finalSort(sortedArr)\r\n\r\n        setLoans(sortedArr)\r\n    }\r\n\r\n    function updateStatus(event) {\r\n        const userId = event.target.id\r\n        const itemId = event.target.getAttribute('itemID').toString()\r\n\r\n        if (event.target.innerHTML === 'Відкрити') {\r\n            db.ref(\"loans\").child(userId).child(itemId).update({PaidOut: false})\r\n        } else {\r\n            db.ref(\"loans\").child(userId).child(itemId).update({PaidOut: true})\r\n        }\r\n\r\n        let sortedArr = []\r\n\r\n        db.ref(\"loans\").child(userData.id).on('value', elem => {\r\n            let obj = elem.val()\r\n\r\n            for (let key in obj) {\r\n                if (key !== '1') {\r\n                    sortedArr.push({id: key, ...obj[key]})\r\n                }\r\n            }\r\n        })\r\n\r\n        sortedArr = finalSort(sortedArr)\r\n\r\n        setLoans(sortedArr)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!document.querySelector('.menu_small_screen').classList.contains('hidden')) {\r\n            document.querySelector('.menu_small_screen').classList.add('hidden')\r\n            document.querySelector('.burger_btn_img').src = burgerImg\r\n        }\r\n        \r\n    }, [])\r\n\r\n    const generatePDF = (target) => {\r\n        const id = target.id\r\n        const itemId = target.getAttribute('itemID')\r\n\r\n        const today = new Date()\r\n        const thisDay = {\r\n            day: String(today.getDay()).length > 1 ? String(today.getDay()) : '0'+String(today.getDay()),\r\n            month: String(today.getMonth()).length > 1 ? String(today.getMonth()) : '0'+String(today.getMonth()),\r\n            year: String(today.getFullYear()),\r\n        }\r\n        \r\n        let element\r\n\r\n        db.ref('loans').child(id).child(itemId).once('value', (elem) => {\r\n            element = elem.val()    \r\n        })\r\n    \r\n        const doc = new jsPDF('landscape', 'pt', 'a4')\r\n        doc.addFont(CyrillicFont, 'CyrillicFont', 'normal');\r\n\r\n        doc.setFont('CyrillicFont')\r\n        doc.setFontSize(26);\r\n        doc.text(40, 50, 'Звіт про позику')\r\n\r\n        const tableFont = 'CyrillicFont';\r\n        const tableFontSize = 14;\r\n        const tableFontSizeVal = 12;\r\n\r\n        const headStyles = {\r\n            font: tableFont,\r\n            fontSize: tableFontSize,\r\n        };\r\n        const bodyStyles = {\r\n            font: tableFont,\r\n            fontSize: tableFontSizeVal,\r\n        };\r\n\r\n        doc.autoTable({\r\n            head: [['Дата запису', \"Ім'я / компанія\", 'Тип депозиту', 'Сума', 'Місячна оплата', 'Дата оплати', 'Кінцева виплата', 'Статус']],\r\n            body: [\r\n              [element.DateOfCreation, element.Name, element.Type, `${element.Value + ' ' + element.Currency}`, element.ValueMonth, element.DateMonth, element.Date, `${element.PaidOut ? 'Закрита' : 'Відкрита'}`],\r\n            ],\r\n            startY: 80,\r\n            headStyles,\r\n            bodyStyles,\r\n        })\r\n\r\n        doc.setFont('CyrillicFont')\r\n        doc.setFontSize(14);\r\n        doc.text(40, 200, 'Дата:')\r\n\r\n        doc.setFont('helvetica', 'italic')\r\n        doc.text(80, 200, `${thisDay.day+'-'+thisDay.month+'-'+thisDay.year}`)\r\n\r\n        doc.save('Loan_report')\r\n    }\r\n\r\n    useEffect(() => {\r\n        db.ref('loans').child(userData.id).on('value', elem => {\r\n            let obj = elem.val()\r\n            let arr = []\r\n    \r\n            for (let key in obj) {\r\n                if (key !== '1') {\r\n                    arr.push({id: key, ...obj[key]})\r\n                }\r\n            }\r\n\r\n            setLoans(arr)\r\n        })\r\n\r\n        setItemOffset(0)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!sortRegime) {\r\n            db.ref(\"loans\").child(userData.id).on('value', elem => {\r\n                let obj = elem.val()\r\n                let arr = []\r\n        \r\n                for (let key in obj) {\r\n                    if (key !== '1') {\r\n                        arr.push({id: key, ...obj[key]})\r\n                    }\r\n                }\r\n                setLoans(arr)\r\n            })\r\n        }\r\n    }, [sortRegime])\r\n\r\n    return (\r\n        <div className=\"loan_page page\">\r\n            <div className='loan_page__header'>\r\n                <h1 className=\"loan_page__title title\">Депозити</h1>\r\n                <button className='add_loan_btn'onClick={openForm}>&#10011;</button>\r\n            </div>\r\n\r\n            <div className=\"finance_main\">\r\n                <LoanForm openForm={openForm} userData={userData} mode={mode} usersNoteId={usersNoteId}/>\r\n\r\n                <div className='finance_table_container'>\r\n                    <div className='table'>\r\n\r\n                        <div className=\"table_titles\">\r\n                            <p className=\"table_title\">Ім'я / компанія</p>\r\n                            <p className=\"table_title\">Кредит</p>\r\n                            <p className=\"table_title\">Дебет</p>\r\n                            <p className=\"table_title\">Місячна сплата</p>\r\n                            <p className=\"table_title\">День оплати</p>\r\n                            <p className=\"table_title\">Кінцева оплата</p>\r\n                            <p className=\"table_title\">Керування</p>\r\n                        </div>\r\n\r\n                        <div className='table_rows'>\r\n                            {currentItems.map((loan, index) => \r\n                                <div className=\"table_row\" key={index}>\r\n\r\n                                    <div className='item_name table_col'>\r\n                                        {loan.PaidOut ? \r\n                                            <p className='break_text name loan_paid_out'>{loan.Name}</p> :\r\n                                            <p className='break_text name'>{loan.Name}</p>\r\n                                        }\r\n                                        <p className='date_of_creation'>{loan.DateOfCreation}</p>\r\n                                    </div>\r\n\r\n                                    <div className='item_value table_col'>\r\n                                        {loan.PaidOut ? \r\n                                            <p className='break_text value costValue loan_paid_out'>{loan.Type === 'Кредит' ? loan.Value : '0'}</p> :\r\n                                            <p className='break_text value costValue'>{loan.Type === 'Кредит' ? loan.Value : '0'}</p> \r\n                                        }\r\n                                        <p className='value_currency'>{loan.Type === 'Кредит' ? loan.Currency : ''}</p>\r\n                                    </div>\r\n\r\n                                    <div className='item_value table_col'>\r\n                                        {loan.PaidOut ? \r\n                                            <p className='break_text value incomeValue loan_paid_out'>{loan.Type === 'Дебет' ? loan.Value : '0'}</p> :\r\n                                            <p className='break_text value incomeValue'>{loan.Type === 'Дебет' ? loan.Value : '0'}</p>\r\n                                        }\r\n                                        <p className='value_currency'>{loan.Type === 'Дебет' ? loan.Currency : ''}</p>\r\n                                    </div>\r\n\r\n                                    <div className='item_value table_col'>\r\n                                        {loan.PaidOut ? <p className='break_text value loan_paid_out'>{loan.ValueMonth}</p> : <p className='break_text value'>{loan.ValueMonth}</p>}\r\n                                    </div>\r\n\r\n                                    <div className='item_date table_col'>\r\n                                        {loan.PaidOut ? <p className='date loan_paid_out'>{loan.DateMonth}</p> : <p className='date'>{loan.DateMonth}</p>}\r\n                                    </div> \r\n\r\n                                    <div className='item_date table_col'>\r\n                                        {loan.PaidOut ? <p className='date date_end loan_paid_out'>{loan.Date}</p> : <p className='date date_end'>{loan.Date}</p>}\r\n                                    </div> \r\n\r\n                                    <div className='item_panel table_col'>\r\n                                        <div className='btns_container'>\r\n                                            {loan.PaidOut ? \r\n                                                <button className='receipt_btn btn' onClick={updateStatus} id={userData.id} itemID={loan.id}>Відкрити</button> :\r\n                                                <button className='receipt_btn btn' onClick={updateStatus} id={userData.id} itemID={loan.id}>Закрити</button>\r\n                                            }\r\n                                            <br />\r\n                                            <button \r\n                                                className='edit_btn btn' \r\n                                                onClick={editOpenForm} \r\n                                                id={userData.id}\r\n                                                itemID={loan.id}\r\n                                            >\r\n                                                Редагувати\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        <div className='btns_container'>\r\n                                            <button \r\n                                                className='receipt_btn btn' \r\n                                                onClick={(e) => generatePDF(e.target)} \r\n                                                id={userData.id} \r\n                                                itemID={loan.id}\r\n                                            >\r\n                                                PDF-звіт\r\n                                            </button>\r\n                                            <br />\r\n                                            <button \r\n                                                className='delete_btn btn' \r\n                                                onClick={deleteItem} \r\n                                                id={userData.id} \r\n                                                itemID={loan.id}\r\n                                            >\r\n                                                Видалити\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {(currentItems.length === 0 || loans.length <= 10) ? null : \r\n                        <ReactPaginate\r\n                            breakLabel=\"...\"\r\n                            nextLabel=\"Далі >\"\r\n                            onPageChange={handlePageClick}\r\n                            pageRangeDisplayed={5}\r\n                            pageCount={pageCount}\r\n                            previousLabel=\"< Назад\"\r\n                            renderOnZeroPageCount={null}\r\n                            className='pagination_list'\r\n                        />\r\n                    }\r\n                </div>\r\n\r\n                <SortPanelLoans \r\n                    finalSort={finalSort}\r\n                    setSortRegime={setSortRegime}\r\n                    userData={userData}\r\n                    category={category}\r\n                    setCategory={setCategory}\r\n                    nameOfParty={nameOfParty}\r\n                    setNameOfParty={setNameOfParty}\r\n                    currency={currency}\r\n                    setCurrency={setCurrency}\r\n                    setLoans={setLoans}\r\n                    loans={loans}\r\n                    paidOutStatus={paidOutStatus}\r\n                    setPaidOutStatus={setPaidOutStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default LoanPage;"],"names":["LoanForm","lazy","SortPanelLoans","userData","useState","loans","setLoans","mode","setMode","usersNoteId","setUsersNoteId","sortRegime","setSortRegime","category","setCategory","nameOfParty","setNameOfParty","currency","setCurrency","paidOutStatus","setPaidOutStatus","itemOffset","setItemOffset","endOffset","pageCount","Math","ceil","length","currentItems","slice","openForm","backTriger","document","querySelector","classList","toggle","contains","add","remove","editOpenForm","event","target","getAttribute","toString","sumDateSort","arr","param","direction","sort","a","b","value1","value2","aType","Currency","bType","parseFloat","Value","date1","Date","split","reverse","join","date2","finalSort","sortedArr","sortedArr2","filter","item","Type","Name","trim","toLowerCase","includes","PaidOut","deleteItem","userId","id","itemId","db","child","on","elem","obj","val","key","push","updateStatus","innerHTML","update","useEffect","src","burgerImg","className","onClick","map","loan","index","DateOfCreation","ValueMonth","DateMonth","itemID","e","element","today","thisDay","String","getDay","getMonth","getFullYear","once","doc","jsPDF","addFont","CyrillicFont","setFont","setFontSize","text","tableFont","headStyles","font","fontSize","bodyStyles","autoTable","head","body","startY","save","generatePDF","breakLabel","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount"],"sourceRoot":""}