{"version":3,"file":"static/js/449.6e29ce8c.chunk.js","mappings":"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","sources":["components/user-components/reportsPage.js"],"sourcesContent":["import '../../styles/components/reports-page.scss'\r\nimport '../../styles/forms/form.scss';\r\nimport 'react-datalist-input/dist/styles.css';\r\nimport CyrillicFont from '../../fonts/FreeSans.ttf'\r\nimport burgerImg from '../../img/burger_menu.png'\r\n\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable'\r\n\r\nimport DatalistInput from 'react-datalist-input';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { db } from '../..';\r\n\r\nfunction ReportsPage({userData}) {\r\n    const months = [\"Січень\", \"Лютий\", \"Березень\", \"Квітень\", \"Травень\", \"Червень\", \"Липень\", \"Серпень\", \"Вересень\", \"Жовтень\", \"Листопад\", \"Грудень\"];\r\n    const presentYear = String(new Date().getFullYear())\r\n\r\n    const { register, reset, handleSubmit, formState, formState: { errors, isSubmitSuccessful } } = useForm();\r\n    const [ yearFinance, setYearFinance ] = useState();\r\n    const [ quarterFinance, setQuarterFinance ] = useState('');\r\n    const [ monthFinance, setMonthFinance ] = useState('');\r\n    const [ dateFinance, setDateFinance ] = useState();\r\n    const [ reportType, setReportType ] = useState('');\r\n\r\n    const [ incomesArr, setIncomesArr] = useState([]);\r\n    const [ costsArr, setCostsArr] = useState([]);\r\n    const [ loansArr, setLoansArr] = useState([]);\r\n\r\n    const [ incomesPDFArr, setIncomesPDFArr] = useState([]);\r\n    const [ costsPDFArr, setCostsPDFArr] = useState([]);\r\n    const [ loansPDFArr, setLoansPDFArr] = useState([]);\r\n\r\n    function checkFinances(objFinance) {\r\n        let financeArr = []\r\n\r\n        if (yearFinance && !quarterFinance) {\r\n            for (let key in objFinance) {\r\n                if (key !== '1' && objFinance[key].Date.split('-')[2] === yearFinance) {\r\n                    financeArr.push({id: key, ...objFinance[key]})\r\n                }\r\n            }\r\n        } else {\r\n            if (yearFinance && quarterFinance && !monthFinance) {\r\n                for (let key in objFinance) {\r\n                    if (key !== '1' && objFinance[key].Date.split('-')[2] === yearFinance ) {\r\n                        switch (quarterFinance) {\r\n                            case 'Перший':\r\n                                if (objFinance[key].Date.split('-')[1] === '01' || objFinance[key].Date.split('-')[1] === '02' || objFinance[key].Date.split('-')[1] === '03') {\r\n                                    financeArr.push({id: key, ...objFinance[key]})\r\n                                }\r\n                                break;\r\n                            case 'Другий':\r\n                                if (objFinance[key].Date.split('-')[1] === '04' || objFinance[key].Date.split('-')[1] === '05' || objFinance[key].Date.split('-')[1] === '06') {\r\n                                    financeArr.push({id: key, ...objFinance[key]})\r\n                                }\r\n                                break;\r\n                            case 'Третій':\r\n                                if (objFinance[key].Date.split('-')[1] === '07' || objFinance[key].Date.split('-')[1] === '08' || objFinance[key].Date.split('-')[1] === '09') {\r\n                                    financeArr.push({id: key, ...objFinance[key]})\r\n                                }\r\n                                break;\r\n                            case 'Четвертий':\r\n                                if (objFinance[key].Date.split('-')[1] === '10' || objFinance[key].Date.split('-')[1] === '11' || objFinance[key].Date.split('-')[1] === '12') {\r\n                                    financeArr.push({id: key, ...objFinance[key]})\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (yearFinance && quarterFinance && monthFinance) {\r\n                    const monthIndex = String(months.indexOf(monthFinance)+1).length > 1 ? String(months.indexOf(monthFinance)+1) : `0${String(months.indexOf(monthFinance)+1)}`\r\n                    for (let key in objFinance) {\r\n                        if (key !== '1' && objFinance[key].Date.split('-')[2] === yearFinance && objFinance[key].Date.split('-')[1] ===  monthIndex) {\r\n                            financeArr.push({id: key, ...objFinance[key]})\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return financeArr\r\n    }\r\n\r\n    function findFinances(type, objFinance) {\r\n        let financeArr = checkFinances(objFinance)\r\n\r\n        type === 'income' ? setIncomesPDFArr(financeArr) : setCostsPDFArr(financeArr)\r\n\r\n        const sumByType = financeArr.reduce((acc, cur) => {\r\n            if (acc[cur.Type]) {\r\n              acc[cur.Type] += parseFloat(cur.Value);\r\n            } else {\r\n              acc[cur.Type] = parseFloat(cur.Value);\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        financeArr = []\r\n\r\n        for (const key in sumByType) {\r\n            financeArr.push({type: key, value: sumByType[key]})\r\n        }\r\n\r\n        financeArr.sort((a, b) => {\r\n            if (a.type.length > b.type.length) {\r\n                return 1\r\n            } else if ((a.type.length < b.type.length)) {\r\n                return -1\r\n            } else {\r\n                return 0\r\n            }\r\n        });\r\n\r\n        type === 'income' ? setIncomesArr(financeArr) : setCostsArr(financeArr)\r\n    }\r\n\r\n    function findLoans(objFinance) {\r\n        let financeArr = checkFinances(objFinance)\r\n        let loansPaidOut = [], loansNotPaidOut = []\r\n\r\n        setLoansPDFArr(financeArr)\r\n\r\n        financeArr.forEach(item => {\r\n            item.PaidOut ? loansPaidOut.push(item) : loansNotPaidOut.push(item)\r\n        })\r\n\r\n        const sumByType_PaidOut = loansPaidOut.reduce((acc, cur) => {\r\n            if (acc[cur.Type]) {\r\n              acc[cur.Type] += parseFloat(cur.Value);\r\n            } else {\r\n              acc[cur.Type] = parseFloat(cur.Value);\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        const sumByType_NotPaidOut = loansNotPaidOut.reduce((acc, cur) => {\r\n            if (acc[cur.Type]) {\r\n              acc[cur.Type] += parseFloat(cur.Value);\r\n            } else {\r\n              acc[cur.Type] = parseFloat(cur.Value);\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        loansPaidOut = []\r\n        loansNotPaidOut = []\r\n\r\n        for (const key in sumByType_PaidOut) {\r\n            loansPaidOut.push({type: key, value: sumByType_PaidOut[key]})\r\n        }\r\n\r\n        for (const key in sumByType_NotPaidOut) {\r\n            loansNotPaidOut.push({type: key, value: sumByType_NotPaidOut[key]})\r\n        }\r\n\r\n        let allLoansArr = [loansPaidOut.sort((a, b) => {\r\n            if (a.type.length > b.type.length) {\r\n                return 1\r\n            } else if ((a.type.length < b.type.length)) {\r\n                return -1\r\n            } else {\r\n                return 0\r\n            }\r\n        }), loansNotPaidOut.sort((a, b) => {\r\n            if (a.type.length > b.type.length) {\r\n                return 1\r\n            } else if ((a.type.length < b.type.length)) {\r\n                return -1\r\n            } else {\r\n                return 0\r\n            }\r\n        })]\r\n\r\n        setLoansArr(allLoansArr)\r\n    }\r\n    \r\n    const resetForm = () => {\r\n        setYearFinance('')\r\n        setQuarterFinance('')\r\n        setMonthFinance('')\r\n    }\r\n    \r\n    const openReportForm = () => {\r\n        setReportType('')\r\n        document.querySelector('.report_form').classList.toggle('hiden')\r\n    }\r\n\r\n    const generatePDF = () => {\r\n        const today = new Date()\r\n        const thisDay = {\r\n            day: String(today.getDay()).length > 1 ? String(today.getDay()) : '0'+String(today.getDay()),\r\n            month: String(today.getMonth()).length > 1 ? String(today.getMonth()) : '0'+String(today.getMonth()),\r\n            year: String(today.getFullYear()),\r\n        }\r\n        \r\n        let summaryArr = []\r\n\r\n        const doc = new jsPDF('landscape', 'pt', 'a4')\r\n        doc.addFont(CyrillicFont, 'CyrillicFont', 'normal');\r\n\r\n        const tableFont = 'CyrillicFont';\r\n        const tableFontSize = 14;\r\n        const tableFontSizeVal = 12;\r\n\r\n        const headStyles = {\r\n            font: tableFont,\r\n            fontSize: tableFontSize,\r\n        };\r\n        const bodyStyles = {\r\n            font: tableFont,\r\n            fontSize: tableFontSizeVal,\r\n        };\r\n\r\n        if (reportType === 'Загальний') {\r\n            //Incomes\r\n\r\n            summaryArr = [...incomesArr]\r\n            let bodyArr = []\r\n\r\n            let sumBody = []\r\n            summaryArr.forEach(item => sumBody.push([item.type, `${item.value + ' UAH'}`]))\r\n\r\n            incomesPDFArr.forEach(item => bodyArr.push([item.DateOfCreation, item.Date, item.Project, item.Type, `${item.Value + ' ' + item.Currency}`]))\r\n\r\n            doc.setFont('CyrillicFont')\r\n            doc.setFontSize(26);\r\n            doc.text(40, 50, 'Загальний звіт по фінансам')\r\n\r\n            if (bodyArr.length > 0) {\r\n                doc.autoTable({\r\n                    head: [['Дата запису', 'Дата транзакції', 'Проєкт', 'Категорія', 'Сума']],\r\n                    body: bodyArr,\r\n                    startY: 80,\r\n                    headStyles,\r\n                    bodyStyles,\r\n                })\r\n    \r\n                doc.autoTable({\r\n                    head: [['Категорія', 'Сума']],\r\n                    body: sumBody,\r\n                    headStyles,\r\n                    bodyStyles,\r\n                })\r\n            }\r\n\r\n            //Expenses\r\n            \r\n            doc.setFont('CyrillicFont')\r\n            doc.setFontSize(20);\r\n\r\n            summaryArr = [...costsArr]\r\n            bodyArr = []\r\n\r\n            sumBody = []\r\n            summaryArr.forEach(item => sumBody.push([item.type, `${item.value + ' UAH'}`]))\r\n\r\n            costsPDFArr.forEach(item => bodyArr.push([item.DateOfCreation, item.Date, item.Project, item.Type, `${item.Value + ' ' + item.Currency}`]))\r\n\r\n            if (bodyArr.length > 0) {\r\n                doc.autoTable({\r\n                    head: [['Дата запису', 'Дата транзакції', 'Проєкт', 'Категорія', 'Сума']],\r\n                    body: bodyArr,\r\n                    headStyles,\r\n                    bodyStyles,\r\n                })\r\n    \r\n                doc.autoTable({\r\n                    head: [['Категорія', 'Сума']],\r\n                    body: sumBody,\r\n                    headStyles,\r\n                    bodyStyles,\r\n                })\r\n            }\r\n\r\n            //Loans\r\n\r\n            summaryArr = [...loansArr]\r\n\r\n            bodyArr = []\r\n\r\n            let sumBodyPaidOut = []\r\n            let sumBodyNotPaidOut = []\r\n            summaryArr[0].forEach(item => sumBodyPaidOut.push([item.type, `${item.value + ' UAH'}`, \"Закрита\"]))\r\n            summaryArr[1].forEach(item => sumBodyNotPaidOut.push([item.type, `${item.value + ' UAH'}`, \"Відкрита\"]))\r\n\r\n            loansPDFArr.forEach(item => bodyArr.push([item.DateOfCreation, item.Name, item.Type, `${item.Value + ' ' + item.Currency}`, item.Date, `${item.PaidOut ? 'Закрита' : 'Відкрита'}`]))\r\n\r\n            if (bodyArr.length > 0) {\r\n                doc.autoTable({\r\n                    head: [['Дата запису', \"Ім'я / компанія\", 'Тип депозиту', 'Сума', 'Дата виплати', 'Статус']],\r\n                    body: bodyArr,\r\n                    headStyles,\r\n                    bodyStyles,\r\n                })\r\n    \r\n                doc.autoTable({\r\n                    head: [['Тип депозиту', 'Сума', 'Статус']],\r\n                    body: sumBodyPaidOut,\r\n                    headStyles,\r\n                    bodyStyles,\r\n                })\r\n    \r\n                doc.autoTable({\r\n                    head: [['Тип депозиту', 'Сума', 'Статус']],\r\n                    body: sumBodyNotPaidOut,\r\n                    headStyles,\r\n                    bodyStyles,\r\n                })\r\n            }\r\n\r\n            doc.save('General_report')\r\n        } else if (reportType === 'Прибутки') {\r\n            summaryArr = [...incomesArr]\r\n            let bodyArr = []\r\n\r\n            let sumBody = []\r\n            summaryArr.forEach(item => sumBody.push([item.type, `${item.value + ' UAH'}`]))\r\n\r\n            incomesPDFArr.forEach(item => bodyArr.push([item.DateOfCreation, item.Date, item.Project, item.Type, `${item.Value + ' ' + item.Currency}`]))\r\n\r\n            doc.setFont('CyrillicFont')\r\n            doc.setFontSize(26);\r\n            doc.text(40, 50, 'Звіт про прибутки')\r\n\r\n            doc.autoTable({\r\n                head: [['Дата запису', 'Дата транзакції', 'Проєкт', 'Категорія', 'Сума']],\r\n                body: bodyArr,\r\n                startY: 80,\r\n                headStyles,\r\n                bodyStyles,\r\n            })\r\n\r\n            doc.autoTable({\r\n                head: [['Категорія', 'Сума']],\r\n                body: sumBody,\r\n                headStyles,\r\n                bodyStyles,\r\n            })\r\n\r\n            doc.save('Income_report')\r\n        } else if (reportType === 'Витрати') {\r\n            summaryArr = [...costsArr]\r\n            let bodyArr = []\r\n\r\n            let sumBody = []\r\n            summaryArr.forEach(item => sumBody.push([item.type, `${item.value + ' UAH'}`]))\r\n\r\n            costsPDFArr.forEach(item => bodyArr.push([item.DateOfCreation, item.Date, item.Project, item.Type, `${item.Value + ' ' + item.Currency}`]))\r\n\r\n            doc.setFont('CyrillicFont')\r\n            doc.setFontSize(26);\r\n            doc.text(40, 50, 'Звіт про витрати')\r\n\r\n            doc.autoTable({\r\n                head: [['Дата запису', 'Дата транзакції', 'Проєкт', 'Категорія', 'Сума']],\r\n                body: bodyArr,\r\n                startY: 80,\r\n                headStyles,\r\n                bodyStyles,\r\n            })\r\n\r\n            doc.autoTable({\r\n                head: [['Категорія', 'Сума']],\r\n                body: sumBody,\r\n                headStyles,\r\n                bodyStyles,\r\n            })\r\n\r\n            doc.save('Expense_report')\r\n        } else if (reportType === 'Депозити') {\r\n            summaryArr = [...loansArr]\r\n\r\n            let bodyArr = []\r\n\r\n            let sumBodyPaidOut = []\r\n            let sumBodyNotPaidOut = []\r\n            summaryArr[0].forEach(item => sumBodyPaidOut.push([item.type, `${item.value + ' UAH'}`, \"Закрита\"]))\r\n            summaryArr[1].forEach(item => sumBodyNotPaidOut.push([item.type, `${item.value + ' UAH'}`, \"Відкрита\"]))\r\n\r\n            loansPDFArr.forEach(item => bodyArr.push([item.DateOfCreation, item.Name, item.Type, `${item.Value + ' ' + item.Currency}`, item.Date, `${item.PaidOut ? 'Закрита' : 'Відкрита'}`]))\r\n\r\n            doc.setFont('CyrillicFont')\r\n            doc.setFontSize(26);\r\n            doc.text(40, 50, 'Звіт про депозити')\r\n\r\n            doc.autoTable({\r\n                head: [['Дата запису', \"Ім'я / компанія\", 'Тип депозиту', 'Сума', 'Дата виплати', 'Статус']],\r\n                body: bodyArr,\r\n                startY: 80,\r\n                headStyles,\r\n                bodyStyles,\r\n            })\r\n\r\n            doc.autoTable({\r\n                head: [['Тип депозиту', 'Сума', 'Статус']],\r\n                body: sumBodyPaidOut,\r\n                headStyles,\r\n                bodyStyles,\r\n            })\r\n\r\n            doc.autoTable({\r\n                head: [['Тип депозиту', 'Сума', 'Статус']],\r\n                body: sumBodyNotPaidOut,\r\n                headStyles,\r\n                bodyStyles,\r\n            })\r\n\r\n            doc.save('Loan_report')\r\n        }\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        if (yearFinance !== '') {\r\n            db.ref('income').child(userData.id).on('value', function(elem) {\r\n                let incomesObj = elem.val()\r\n                findFinances('income', incomesObj)\r\n            });\r\n\r\n            db.ref('costs').child(userData.id).on('value', function(elem) {\r\n                let costsObj = elem.val()\r\n                findFinances('costs', costsObj)\r\n            });\r\n\r\n            db.ref('loans').child(userData.id).on('value', function(elem) {\r\n                let loansObj = elem.val()\r\n                findLoans(loansObj)\r\n            });\r\n        } else {\r\n            setIncomesArr([])\r\n            setCostsArr([])\r\n            setLoansArr([])\r\n        }\r\n\r\n        setDateFinance({year: yearFinance, quarter: quarterFinance, month: monthFinance})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (formState.isSubmitSuccessful) {\r\n            reset({year: '', quarter: '', month: '',})\r\n        }\r\n    }, [formState])\r\n\r\n    useEffect(() => {\r\n        if (!document.querySelector('.menu_small_screen').classList.contains('hidden')) {\r\n            document.querySelector('.menu_small_screen').classList.add('hidden')\r\n            document.querySelector('.burger_btn_img').src = burgerImg\r\n        }\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"reports_page page\">\r\n            <h1 className=\"title\">Статистика</h1>\r\n\r\n            <div className='reports_page__main'>\r\n                <div className='reports_page__main_form'>\r\n                    <Form onSubmit={handleSubmit(onSubmit)} className='reports_form'>\r\n                        <Form.Field>\r\n                            <label>Рік:</label>\r\n                            <DatalistInput\r\n                                value={yearFinance}\r\n                                setValue={setYearFinance}\r\n                                placeholder='Рік...'\r\n                                items={[\r\n                                    { id: '1', value: `${+presentYear - 5}` },\r\n                                    { id: '2', value: `${+presentYear - 4}` },\r\n                                    { id: '3', value: `${+presentYear - 3}` },\r\n                                    { id: '4', value: `${+presentYear - 2}` },\r\n                                    { id: '5', value: `${+presentYear - 1}` },\r\n                                    { id: '6', value: `${+presentYear}` },\r\n                                    { id: '7', value: `${+presentYear + 1}` },\r\n                                    { id: '8', value: `${+presentYear + 2}` },\r\n                                    { id: '9', value: `${+presentYear + 3}` },\r\n                                    { id: '10', value: `${+presentYear + 4}` },\r\n                                    { id: '11', value: `${+presentYear + 5}` },\r\n                                ]}\r\n                                {...register('year', {\r\n                                    required: false\r\n                                })}\r\n                            />\r\n                        </Form.Field>\r\n                        {yearFinance ? \r\n                            <Form.Field>\r\n                                <label>Квартал:</label>\r\n                                <DatalistInput\r\n                                    value={quarterFinance}\r\n                                    setValue={setQuarterFinance}\r\n                                    placeholder=\"Квартал...\"\r\n                                    items={[\r\n                                        { id: '1', value: 'Перший' },\r\n                                        { id: '2', value: 'Другий' },\r\n                                        { id: '3', value: 'Третій' },\r\n                                        { id: '4', value: 'Четвертий' },\r\n                                    ]}\r\n                                    {...register('quarter', {\r\n                                        required: false\r\n                                    })}\r\n                                />\r\n                            </Form.Field>\r\n                            : null\r\n                        }\r\n                        {quarterFinance ? \r\n                            <Form.Field>\r\n                                <label>Місяць:</label>\r\n                                {quarterFinance === 'Перший' ?\r\n                                    <DatalistInput\r\n                                        value={monthFinance}\r\n                                        setValue={setMonthFinance}\r\n                                        placeholder=\"Місяць...\"\r\n                                        items={[\r\n                                            { id: '1', value: 'Січень' },\r\n                                            { id: '2', value: 'Лютий' },\r\n                                            { id: '3', value: 'Березень' },\r\n                                        ]}\r\n                                        {...register('month', {\r\n                                            required: false\r\n                                        })}\r\n                                    /> : quarterFinance === 'Другий' ?\r\n                                        <DatalistInput\r\n                                            value={monthFinance}\r\n                                            setValue={setMonthFinance}\r\n                                            placeholder=\"Місяць...\"\r\n                                            items={[\r\n                                                { id: '1', value: 'Квітень' },\r\n                                                { id: '2', value: 'Травень' },\r\n                                                { id: '3', value: 'Червень' },\r\n                                            ]}\r\n                                            {...register('month', {\r\n                                                required: false\r\n                                            })}\r\n                                        /> : quarterFinance === 'Третій' ?\r\n                                            <DatalistInput\r\n                                                value={monthFinance}\r\n                                                setValue={setMonthFinance}\r\n                                                placeholder=\"Місяць...\"\r\n                                                items={[\r\n                                                    { id: '1', value: 'Липень' },\r\n                                                    { id: '2', value: 'Серпень' },\r\n                                                    { id: '3', value: 'Вересень' },\r\n                                                ]}\r\n                                                {...register('month', {\r\n                                                    required: false\r\n                                                })}\r\n                                            /> : \r\n                                            <DatalistInput\r\n                                                value={monthFinance}\r\n                                                setValue={setMonthFinance}\r\n                                                placeholder=\"Місяць...\"\r\n                                                items={[\r\n                                                    { id: '1', value: 'Жовтень' },\r\n                                                    { id: '2', value: 'Листопад' },\r\n                                                    { id: '3', value: 'Грудень' },\r\n                                                ]}\r\n                                                {...register('month', {\r\n                                                    required: false\r\n                                                })}\r\n                                            />\r\n                                }\r\n                            </Form.Field>\r\n                            : null\r\n                        }\r\n\r\n                        <Form.Field className='btns_field'>\r\n                            <Button className='non_active_btn' onClick={resetForm} type='reset'>Скинути</Button>\r\n                            <Button className='sign-in_btn' type='submit'>Підтвердити</Button>\r\n                        </Form.Field>\r\n                    </Form>\r\n\r\n                    <div className='report_form__container'>\r\n                        <button className='receipt_btn btn' onClick={openReportForm}>Сформувати PDF-звіт</button>\r\n\r\n                        <Form className='report_form hiden'>\r\n                            <Form.Field>\r\n                                <label>Оберіть тип звіту:</label>\r\n                                <DatalistInput\r\n                                value={reportType}\r\n                                setValue={setReportType}\r\n                                placeholder=\"Тип...\"\r\n                                items={[\r\n                                    { id: '1', value: 'Загальний' },\r\n                                    { id: '2', value: 'Прибутки' },\r\n                                    { id: '3', value: 'Витрати' },\r\n                                    { id: '4', value: 'Депозити' },\r\n                                ]}\r\n                            />\r\n                            </Form.Field>\r\n                            <Form.Field className='btns_field'>\r\n                                <Button className='non_active_btn' onClick={openReportForm}>Назад</Button>\r\n                                <Button className='sign-in_btn' onClick={generatePDF}>Підтвердити</Button>\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n\r\n                {incomesArr.length > 0 || costsArr.length > 0 || loansArr.length > 0 ? \r\n                    <div className='reports__container'>\r\n                        {dateFinance['year'] ? dateFinance['year'].length > 0 && dateFinance['quarter'].length === 0  ?\r\n                            <h3 className='reports__container_title'>Статистика за {dateFinance.year} рік</h3> :\r\n                            dateFinance['year'].length > 0 && dateFinance['quarter'].length > 0 && dateFinance['month'].length === 0  ?\r\n                                <h3 className='reports__container_title'>Статистика за {dateFinance.year} рік, {dateFinance.quarter} квартал</h3> :\r\n                                <h3 className='reports__container_title'>Статистика за {dateFinance.year} рік, {dateFinance.quarter} квартал, {dateFinance.month}</h3>\r\n                        : <h3 className='reports__container_title'>Статистика</h3>}\r\n\r\n                        <h4 className='reports__title'>Фінанси</h4>\r\n\r\n                        <div className='report_finances'>\r\n                            <div className='report_container'>\r\n                                <div>\r\n                                    <h5 className='report_title'>Прибутки:</h5>\r\n                                    {incomesArr.length > 0 ? incomesArr.map((item, index) => {\r\n                                        return <p className='report_item' key={index}>{item.type}: {item.value} ₴</p>}\r\n                                    ) : null}\r\n                                </div>\r\n                                <p className='report_item good'>Разом: {incomesArr.length > 0 ? incomesArr.reduce((acc, cur) => acc + cur.value, 0) : 0} ₴</p>\r\n                            </div>\r\n                            <div className='report_container'>\r\n                                <div>\r\n                                    <h5 className='report_title'>Витрати:</h5>\r\n                                    {costsArr.length > 0 ? costsArr.map((item, index) => {\r\n                                        return <p className='report_item' key={index}>{item.type}: {item.value} ₴</p>}\r\n                                    ): null}\r\n                                </div>\r\n                                <p className='report_item bad'>Разом: {costsArr.length > 0 ? costsArr.reduce((acc, cur) => acc + cur.value, 0): 0} ₴</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h4 className='reports__title'>Депозити</h4>\r\n\r\n                        <div className='report_finances'>\r\n                            <div className='report_container'>\r\n                                <div>\r\n                                    <h5 className='report_title'>Закриті:</h5>\r\n                                    {loansArr.length > 0 ? loansArr[0].map((item, index) => {\r\n                                        return <p className='report_item' key={index}>{item.type !== 'Кредит' ? 'Отримали' : 'Віддали'}: {item.value} ₴</p>}\r\n                                    ) : null}\r\n                                </div>\r\n                                <p className='report_item dif'>Різниця: {(loansArr && loansArr[0] && loansArr[1] && loansArr[0][0] && loansArr[0][1] && loansArr[1][0] && loansArr[1][1]) && (loansArr[0].length > 0 || loansArr[1].length > 0)  ? (loansArr[0][0].value && loansArr[0][1].value) ? loansArr[0][1].value - loansArr[0][0].value : (loansArr[0][0].value && !loansArr[0][1].value) ? loansArr[0][0].value : loansArr[0][1].value : 0} ₴</p>\r\n                            </div>\r\n                            <div className='report_container'>\r\n                                <div>\r\n                                    <h5 className='report_title'>Відкриті:</h5>\r\n                                    {loansArr.length > 0 ? loansArr[1].map((item, index) => {\r\n                                        return <p className='report_item' key={index}>{item.type}: {item.value} ₴</p>}\r\n                                    ) : null}\r\n                                </div>\r\n                                <p className='report_item dif'>Різниця: {(loansArr && loansArr[0] && loansArr[1] && loansArr[0][0] && loansArr[0][1] && loansArr[1][0] && loansArr[1][1]) && (loansArr[0].length > 0 || loansArr[1].length > 0)  ? (loansArr[1][0].value && loansArr[1][1].value) ? loansArr[1][1].value - loansArr[1][0].value : (loansArr[1][0].value && !loansArr[1][1].value) ? loansArr[1][0].value : loansArr[1][1].value : 0} ₴</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                : null}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default ReportsPage;"],"names":["userData","months","presentYear","String","Date","getFullYear","useForm","register","reset","handleSubmit","formState","errors","isSubmitSuccessful","useState","yearFinance","setYearFinance","quarterFinance","setQuarterFinance","monthFinance","setMonthFinance","dateFinance","setDateFinance","reportType","setReportType","incomesArr","setIncomesArr","costsArr","setCostsArr","loansArr","setLoansArr","incomesPDFArr","setIncomesPDFArr","costsPDFArr","setCostsPDFArr","loansPDFArr","setLoansPDFArr","checkFinances","objFinance","financeArr","key","split","push","id","monthIndex","indexOf","length","findFinances","type","sumByType","reduce","acc","cur","Type","parseFloat","Value","value","sort","a","b","openReportForm","document","querySelector","classList","toggle","useEffect","year","quarter","month","contains","add","src","burgerImg","className","Form","onSubmit","data","db","child","on","elem","val","loansPaidOut","loansNotPaidOut","forEach","item","PaidOut","sumByType_PaidOut","sumByType_NotPaidOut","allLoansArr","findLoans","setValue","placeholder","items","required","Button","onClick","today","summaryArr","getDay","getMonth","doc","jsPDF","addFont","CyrillicFont","tableFont","headStyles","font","fontSize","bodyStyles","bodyArr","sumBody","DateOfCreation","Project","Currency","setFont","setFontSize","text","autoTable","head","body","startY","sumBodyPaidOut","sumBodyNotPaidOut","Name","save","map","index"],"sourceRoot":""}