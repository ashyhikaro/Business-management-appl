{"version":3,"file":"static/js/923.062304eb.chunk.js","mappings":"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","sources":["components/user-components/forms/sortPanelFinance.js"],"sourcesContent":["import '../../../styles/components/finance-page.scss'\r\n\r\nimport DatalistInput from 'react-datalist-input';\r\nimport { useEffect } from \"react\";\r\n\r\nimport { db } from '../../..';\r\n\r\nfunction SortPanelFinance({\r\n    regime, setIncomes, setCosts, finalSort, \r\n    setSortRegime, userData, category, setCategory, \r\n    projectName, setProjectName, currency, setCurrency }) {\r\n\r\n    let sortedArr = []\r\n\r\n    db.ref(regime).child(userData.id).on('value', elem => {\r\n        let obj = elem.val()\r\n\r\n        if (regime === 'income') {\r\n            for (let key in obj) {\r\n                if (key !== '1') {\r\n                    sortedArr.push({id: key, ...obj[key]})\r\n                }\r\n            }\r\n        } else {\r\n            for (let key in obj) {\r\n                if (key !== '1') {\r\n                    sortedArr.push({id: key, ...obj[key]})\r\n                }\r\n            }\r\n        }\r\n\r\n        sortedArr = finalSort(sortedArr)\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (category) {\r\n            sortedArr = sortedArr.filter(item => item.Type === category)\r\n        }\r\n\r\n        if (projectName) {\r\n            sortedArr = sortedArr.filter(item => item.Project.trim().toLowerCase().includes(projectName.trim().toLowerCase()))\r\n        }\r\n\r\n        if (currency) {\r\n            sortedArr = sortedArr.filter(item => item.Currency === currency)\r\n        }\r\n\r\n        regime === 'income' ? setIncomes(sortedArr) : setCosts(sortedArr)\r\n    }, [category, projectName, currency])\r\n\r\n    function sortFinance(param, direction) {\r\n        sortedArr.sort(function(a, b) {\r\n            if (param === 'sum') {\r\n                let value1 = 0\r\n                let value2 = 0\r\n\r\n                switch (a.Currency) {\r\n                    case \"USD\":\r\n                        value1 = parseFloat(a.Value) * 40;\r\n                        break;\r\n                    case \"EUR\":\r\n                        value1 = parseFloat(a.Value) * 40;\r\n                        break;\r\n                    case \"GBP\":\r\n                        value1 = parseFloat(a.Value) * 44;\r\n                        break;\r\n                    case \"JPY\":\r\n                        value1 = parseFloat(a.Value) * 0.3;\r\n                        break;\r\n                    case \"CNY\":\r\n                        value1 = parseFloat(a.Value) * 5.4;\r\n                        break;\r\n                    default:\r\n                        value1 = parseFloat(a.Value);\r\n                }\r\n    \r\n                switch (b.Currency) {\r\n                    case \"USD\":\r\n                        value2 = parseFloat(b.Value) * 40;\r\n                        break;\r\n                    case \"EUR\":\r\n                        value2 = parseFloat(b.Value) * 40;\r\n                        break;\r\n                    case \"GBP\":\r\n                        value2 = parseFloat(b.Value) * 44;\r\n                        break;\r\n                    case \"JPY\":\r\n                        value2 = parseFloat(b.Value) * 0.3;\r\n                        break;\r\n                    case \"CNY\":\r\n                        value2 = parseFloat(b.Value) * 5.4;\r\n                        break;\r\n                    default:\r\n                        value2 = parseFloat(b.Value);\r\n                }\r\n\r\n                if (direction === 'top') {\r\n                    setSortRegime('sum/top')\r\n                    if (value1 > value2) {\r\n                        return 1\r\n                    } else {\r\n                        if (value1 < value2) {\r\n                            return -1\r\n                        } else {\r\n                            return 0\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    setSortRegime('sum/bottom')\r\n                    if (value1 < value2) {\r\n                        return 1\r\n                    } else {\r\n                        if (value1 > value2) {\r\n                            return -1\r\n                        } else {\r\n                            return 0\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (param === 'date') {\r\n                    let date1 = +a.Date.split('-').reverse().join('')\r\n                    let date2 = +b.Date.split('-').reverse().join('')\r\n\r\n                    if (direction === 'top') {\r\n                        setSortRegime('date/top')\r\n                        if (date1 > date2) {\r\n                            return 1\r\n                        } else {\r\n                            if (date1 < date2) {\r\n                                return -1\r\n                            } else {\r\n                                return 0\r\n                            }\r\n                        }\r\n                    } else {\r\n                        setSortRegime('date/bottom')\r\n                        if (date1 < date2) {\r\n                            return 1\r\n                        } else {\r\n                            if (date1 > date2) {\r\n                                return -1\r\n                            } else {\r\n                                return 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    function handleSortFinance(param, direction) {\r\n        if (projectName) {\r\n            sortedArr = sortedArr.filter(item => item.Project.trim().toLowerCase().includes(projectName))\r\n        }\r\n\r\n        if (category) {\r\n            sortedArr = sortedArr.filter(item => item.Type === category)\r\n        }\r\n\r\n        sortFinance(param, direction)\r\n\r\n        regime === 'income' ? setIncomes(sortedArr) : setCosts(sortedArr)\r\n    }\r\n\r\n    function resetFilter() {\r\n        setSortRegime('')\r\n        setProjectName('')\r\n        setCategory('')\r\n        setCurrency('')\r\n\r\n        document.querySelector('.project_input').value = ''\r\n    }\r\n\r\n    return (\r\n        <div className='sort_panel_finances'>\r\n            <h2>Сортування</h2>\r\n\r\n            <div className='sort__date sort_con_flex'>\r\n                <h4 className='sort__date_title'>Дата:</h4>\r\n                <div className='sort_btns'>\r\n                    <button onClick={() => handleSortFinance('date', 'top')}>Зростання&nbsp;<span>&#129041;</span></button>\r\n                    <button onClick={() => handleSortFinance('date', 'bottom')}>Спадання&nbsp;<span>&#129043;</span></button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='sort__sum sort_con_flex'>\r\n                <h4 className='sort__sum_title'>Сума:</h4>\r\n                <div className='sort_btns'>\r\n                    <button onClick={() => handleSortFinance('sum', 'top')}>Зростання&nbsp;<span>&#129041;</span></button>\r\n                    <button onClick={() => handleSortFinance('sum', 'bottom')}>Спадання&nbsp;<span>&#129043;</span></button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='sort__currency'>\r\n                <h4>Валюта: </h4>\r\n                <DatalistInput\r\n                    value={currency}\r\n                    setValue={setCurrency}\r\n                    placeholder=\"UAH\"\r\n                    items={[\r\n                        { id: 'UAH', value: 'UAH' },\r\n                        { id: 'USD', value: 'USD' },\r\n                        { id: 'EUR', value: 'EUR' },\r\n                        { id: 'GBP', value: 'GBP' },\r\n                        { id: 'JPY', value: 'JPY' },\r\n                        { id: 'CNY', value: 'CNY' },\r\n                    ]}\r\n                />\r\n            </div>\r\n\r\n            <div className='sort__category'>\r\n                <h4>Категорія: </h4>\r\n                {regime === 'income' ? \r\n                    <DatalistInput\r\n                        value={category}\r\n                        setValue={setCategory}\r\n                        placeholder=\"За товар / послугу\"\r\n                        items={[\r\n                            {id: 'Payment', value: 'За товар / послугу'},\r\n                            {id: 'Prepayment', value: 'Передоплата'},\r\n                            {id: 'Another', value: 'Інші надходження'},\r\n                        ]}\r\n                    /> :\r\n                    <DatalistInput\r\n                        value={category}\r\n                        setValue={setCategory}\r\n                        placeholder=\"Телефон / інтернет\"\r\n                        items={[\r\n                            {id: 'Connection', value: 'Телефон / інтернет'},\r\n                            {id: 'Suppliers', value: 'Оплата постачальникам'},\r\n                            {id: 'Rent', value: 'Оренда'},\r\n                            {id: 'Taxes', value: 'Податки'},\r\n                            {id: 'Salary', value: 'Заробітна плата'},\r\n                            {id: 'Another payments', value: 'Інші виплати'},\r\n                        ]}\r\n                    />\r\n                }\r\n            </div>\r\n\r\n            <div className='sort__project'>\r\n                <h4>Проєкт: </h4>\r\n                <div className='sort__project_search'>\r\n                    <input type=\"text\" className='project_input' placeholder='Проєкт...'/>\r\n                    <button onClick={() => setProjectName(document.querySelector('.project_input').value)}>Пошук</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='reset_btn__container'>\r\n                <button onClick={resetFilter} className='reset_btn'>Скинути фільтри</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortPanelFinance;"],"names":["regime","setIncomes","setCosts","finalSort","setSortRegime","userData","category","setCategory","projectName","setProjectName","currency","setCurrency","sortedArr","handleSortFinance","param","direction","filter","item","Project","trim","toLowerCase","includes","Type","sort","a","b","value1","value2","Currency","parseFloat","Value","date1","Date","split","reverse","join","date2","sortFinance","db","child","id","on","elem","obj","val","key","push","useEffect","className","onClick","value","setValue","placeholder","items","type","document","querySelector"],"sourceRoot":""}