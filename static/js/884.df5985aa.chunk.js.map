{"version":3,"file":"static/js/884.df5985aa.chunk.js","mappings":"oKA2FA,UAxFA,SAAkB,GAAkC,IAAjCA,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YAE9BC,EAAUF,GAAU,OAAOA,GAAc,GACzCG,EAAS,GACTC,EAAS,GAETC,EAAgB,CAAC,EAkCrB,IAAK,IAAIC,KAhCTJ,EAAQK,SAAQ,SAAAC,GACZ,IAEIC,EAFAC,EAAOF,EAAKG,KAIhB,OAAQH,EAAKI,UACT,IAAK,MAGL,IAAK,MACDH,EAAiC,GAAzBI,WAAWL,EAAKM,OACxB,MACJ,IAAK,MACDL,EAAiC,GAAzBI,WAAWL,EAAKM,OACxB,MACJ,IAAK,MACDL,EAAiC,GAAzBI,WAAWL,EAAKM,OACxB,MACJ,IAAK,MACDL,EAAiC,IAAzBI,WAAWL,EAAKM,OACxB,MACJ,QACIL,EAAQI,WAAWL,EAAKM,OAG5BJ,KAAQL,EACRA,EAAcK,IAASG,WAAWJ,GAElCJ,EAAcK,GAAQG,WAAWJ,EAEzC,IAEgBJ,EACZD,EAAOW,KAAKV,EAAcC,IAC1BH,EAAOY,KAAKT,GAGhB,IAAMU,EAAY,CACdb,OAAQA,EACRc,SAAU,CACN,CACIC,MAAuB,YAAhBjB,EAA4B,mDAAa,yDAChDkB,KAAMf,EACNgB,gBAAiC,YAAhBnB,EAA4B,CACzC,mBACA,oBACA,qBACA,CACA,UACA,UACA,UACA,UACA,UACA,cAMhB,OACI,iBAAKoB,UAAU,kBAAiB,WAC5B,eAAIC,MAAO,CAAEC,UAAW,UAAU,SAAExB,KACpC,mBACA,SAAC,KAAG,CACAoB,KAAMH,EACNQ,QAAS,CACLC,QAAS,CACL1B,MAAO,CACH2B,SAAS,GAEbC,OAAQ,CACJD,SAAS,SAOrC,C","sources":["components/graphics/PieChart.js"],"sourcesContent":["import Chart from 'chart.js/auto';\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction PieChart({title, financeArr, financeType}){\r\n\r\n    let dataArr = financeArr ? [...financeArr] : []\r\n    let labels = []\r\n    let values = []\r\n\r\n    let finances_data = {}\r\n\r\n    dataArr.forEach(item => {\r\n        let type = item.Type\r\n\r\n        let value\r\n\r\n        switch (item.Currency) {\r\n            case \"USD\":\r\n                value = parseFloat(item.Value) * 40;\r\n                break;\r\n            case \"EUR\":\r\n                value = parseFloat(item.Value) * 40;\r\n                break;\r\n            case \"GBP\":\r\n                value = parseFloat(item.Value) * 44;\r\n                break;\r\n            case \"JPY\":\r\n                value = parseFloat(item.Value) * 0.3;\r\n                break;\r\n            case \"CNY\":\r\n                value = parseFloat(item.Value) * 5.4;\r\n                break;\r\n            default:\r\n                value = parseFloat(item.Value);\r\n        }\r\n\r\n        if (type in finances_data) {\r\n            finances_data[type] += parseFloat(value)\r\n        } else {\r\n            finances_data[type] = parseFloat(value)\r\n        }\r\n    })\r\n\r\n    for (let key in finances_data) {\r\n        values.push(finances_data[key])\r\n        labels.push(key)\r\n    }\r\n\r\n    const chartData = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: financeType === 'incomes' ? 'Отримано' : 'Витрачено',\r\n                data: values,\r\n                backgroundColor: financeType === 'incomes' ? [\r\n                    'rgb(50, 205, 50)',\r\n                    'rgb(54, 162, 235)',\r\n                    'rgb(255, 205, 86)',\r\n                ] : [\r\n                    '#00BFFF',\r\n                    '#E699CC',\r\n                    '#A4C49A',\r\n                    '#66CCCC',\r\n                    '#B266B2',\r\n                    '#808080',\r\n                ],\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <h2 style={{ textAlign: \"center\"}}>{title}</h2>\r\n            <br />\r\n            <Pie\r\n                data={chartData}\r\n                options={{\r\n                    plugins: {\r\n                        title: {\r\n                            display: true,\r\n                        },\r\n                        legend: {\r\n                            display: false\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PieChart;"],"names":["title","financeArr","financeType","dataArr","labels","values","finances_data","key","forEach","item","value","type","Type","Currency","parseFloat","Value","push","chartData","datasets","label","data","backgroundColor","className","style","textAlign","options","plugins","display","legend"],"sourceRoot":""}