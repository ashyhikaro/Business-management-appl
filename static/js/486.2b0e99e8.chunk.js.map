{"version":3,"file":"static/js/486.2b0e99e8.chunk.js","mappings":"2OA+IA,UAvIA,SAAyB,GAA6C,IAA5CA,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAS,EAATA,UACjD,GAAiEC,EAAAA,EAAAA,MAAzDC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAAOC,EAAY,EAAZA,aAA2BC,EAAM,EAAnBC,UAAaD,OACpD,GAAgCE,EAAAA,EAAAA,UAAS,CAAEC,QAAS,GAAIC,OAAQ,KAAI,eAA7DC,EAAU,KAAEC,EAAS,KACtBC,GAAWC,EAAAA,EAAAA,MAWjB,OACQ,gBAAKC,UAAS,iCAA4Bd,GAAY,UAC9C,UAAC,IAAI,CAACe,SAAUX,GAXf,SAACY,GACVlB,GAAgB,kBAAIkB,GAAI,IAAER,QAASE,EAAWF,QAASC,OAAQC,EAAWD,UAC1EE,EAAU,CAAEH,QAAS,GAAIC,OAAQ,KAE5BQ,aAAaC,QAAQ,SAClBN,EAAS,IAEzB,IAIuD,WAC/B,UAAC,UAAU,YACH,oDACEK,aAAaC,QAAQ,SASf,kCACQC,KAAK,OACLC,YAAY,uBACRlB,EAAS,cAAY,IACzBmB,UAAU,SAZlB,kCACQF,KAAK,OACLC,YAAY,uBACRlB,EAAS,YAAa,CAClBoB,SAAU,6IAChB,IACFD,UAAU,QAUzBhB,EAAOkB,YAAa,cAAGT,UAAU,gBAAe,0JAGzD,UAAC,UAAU,YACH,iFACEG,aAAaC,QAAQ,SAQf,kCAAQC,KAAK,OACLC,YAAY,oDACRlB,EAAS,aAAW,IACxBmB,UAAU,SAVlB,kCAAQF,KAAK,OACLC,YAAY,oDACRlB,EAAS,WAAY,CACjBoB,SAAU,0KAChB,IACFD,UAAU,QAQzBhB,EAAOmB,WAAY,cAAGV,UAAU,gBAAe,uLAGxD,UAAC,UAAU,YACH,mDACEG,aAAaC,QAAQ,SAMf,0BAAQC,KAAK,QACDjB,EAAS,UANrB,0BAAQiB,KAAK,QACDjB,EAAS,MAAO,CACZoB,SAAU,gNAOjCjB,EAAOoB,MAAO,cAAGX,UAAU,gBAAe,4NAGnD,UAAC,UAAU,YACH,iHACA,8EACEG,aAAaC,QAAQ,SAQf,kCAAQC,KAAK,MACLC,YAAY,mFACRlB,EAAS,UAAQ,IACrBwB,QAAQ,iCAVhB,kCAAQP,KAAK,MACLC,YAAY,mFACRlB,EAAS,QAAS,CACdoB,SAAU,4IAChB,IACFI,QAAQ,gCAQvBrB,EAAOsB,QAAS,cAAGb,UAAU,gBAAe,0HAGrD,UAAC,UAAU,YACH,wHACA,SAAC,KAAe,CACRc,MAAOlB,EAAWF,QAClBqB,SAAU,SAACC,GAAG,OAAKnB,GAAU,SAAAoB,GACrB,OAAID,IAAQC,EAAKvB,QACF,CAACA,QAASsB,EAAKrB,OAAQ,MAEvB,kBAAIsB,GAAI,IAAEvB,QAASsB,GAE1C,GAAE,KAEV,SAAC,KAAc,CACPtB,QAASE,EAAWF,QACpBoB,MAAOlB,EAAWD,OAClBoB,SAAU,SAACC,GAAG,OAAKnB,GAAU,SAAAoB,GAAS,OAAO,kBAAIA,GAAI,IAAEtB,OAAQqB,GAAK,GAAE,OAIpFb,aAAaC,QAAQ,SAUf,UAAC,UAAU,CAACJ,UAAU,aAAY,WAC1B,SAAC,IAAM,CAACA,UAAU,aAAaK,KAAK,SAASa,QAAS,WAC9CC,SAASC,cAAc,eAAeC,UAAUC,OAAO,cACvDjC,EAAM,CAAEoB,UAAW,GAAIC,SAAU,GAAIC,IAAK,GAAIE,MAAO,IAC7D,EAAE,qEACF,SAAC,IAAM,CAACb,UAAU,aAAaK,KAAK,SAAQ,kEAdpD,UAAC,UAAU,CAACL,UAAU,aAAY,WAC1B,SAAC,IAAM,CAACA,UAAU,aAAaK,KAAK,SAASa,QAAS,SAACK,GAC/CA,EAAEC,iBACF1B,EAAS,KACTb,GACR,EAAE,qEACF,SAAC,IAAM,CAACe,UAAU,aAAaK,KAAK,SAAQ,qEAc5F,C,+GCnGA,MApCA,SAAqB,GAA8B,IAA7BoB,EAAQ,EAARA,SAAUzC,EAAe,EAAfA,gBAa5B,OARA0C,EAAAA,EAAAA,YAAU,WACDP,SAASC,cAAc,sBAAsBC,UAAUM,SAAS,YACjER,SAASC,cAAc,sBAAsBC,UAAUO,IAAI,UAC3DT,SAASC,cAAc,mBAAmBS,IAAMC,EAGxD,GAAG,KAGC,iBAAK9B,UAAU,oBAAmB,WAC9B,eAAIA,UAAU,4BAA2B,yDAEzC,iBAAKA,UAAU,uBAAsB,WACjC,iBAAKA,UAAU,YAAW,WACtB,kDAAS,0BAAOyB,EAAShB,gBACzB,+EAAa,0BAAOgB,EAASf,eAC7B,oHAAoB,0BAAOe,EAASd,UACpC,oCAAU,0BAAOc,EAASM,YAC1B,yEAAY,0BAAON,EAASZ,YAC5B,mEAAW,0BAAOY,EAAS/B,cAC3B,mEAAW,0BAAO+B,EAAS9B,aAE3B,mBAAQuB,QA1BxB,WACIC,SAASC,cAAc,eAAeC,UAAUC,OAAO,aAC3D,EAwBiDtB,UAAU,mBAAkB,0FAGjE,SAAC,UAAe,CAAChB,gBAAiBA,EAAiBE,UAAW,oBAI9E,C","sources":["components/user-components/forms/userSettingsForm.js","components/user-components/userProfilePage.js"],"sourcesContent":["import '../../../styles/forms/log-page.scss'\r\nimport '../../../styles/forms/form.scss'\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useState } from 'react';\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\nfunction UserSettingForm({setUserSettings, handleLogout, nonActive}) {\r\n        const { register, reset, handleSubmit, formState: { errors } } = useForm();\r\n        const [regionInfo, setRegion] = useState({ country: '', region: ''})\r\n        const navigate = useNavigate()\r\n\r\n        const onSubmit = (data) => {\r\n                setUserSettings({...data, country: regionInfo.country, region: regionInfo.region})\r\n                setRegion({ country: '', region: ''})\r\n\r\n                if (!localStorage.getItem('user')) {\r\n                        navigate('/');\r\n                }\r\n        }\r\n\r\n        return (\r\n                <div className={`form_block login_block ${nonActive}`}>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                <Form.Field>\r\n                                        <label>Ім'я:</label>\r\n                                        {!localStorage.getItem('user') ? \r\n                                                <input  \r\n                                                        type='text'\r\n                                                        placeholder=\"Ім'я\" \r\n                                                        {...register('firstname', {\r\n                                                                required: \"Відсутнє ім'я користувача\"\r\n                                                        })}\r\n                                                        maxLength=\"10\"\r\n                                                />: \r\n                                                <input\r\n                                                        type='text'\r\n                                                        placeholder=\"Ім'я\" \r\n                                                        {...register('firstname')}\r\n                                                        maxLength=\"10\"\r\n                                                />\r\n\r\n                                        }\r\n                                        {errors.firstname && <p className='error_message'>*Відсутнє ім'я користувача</p>}\r\n                                </Form.Field>\r\n\r\n                                <Form.Field>\r\n                                        <label>Прізвище:</label>\r\n                                        {!localStorage.getItem('user') ? \r\n                                                <input  type='text'\r\n                                                        placeholder=\"Прізвище\" \r\n                                                        {...register('lastname', {\r\n                                                                required: 'Відсутнє прізвище користувача'\r\n                                                        })}\r\n                                                        maxLength=\"15\"\r\n                                                /> :\r\n                                                <input  type='text'\r\n                                                        placeholder=\"Прізвище\" \r\n                                                        {...register('lastname')}\r\n                                                        maxLength=\"15\"\r\n                                                />\r\n                                        }\r\n                                        {errors.lastname && <p className='error_message'>*Відсутнє прізвище користувача</p>}\r\n                                </Form.Field>\r\n\r\n                                <Form.Field>\r\n                                        <label>Вік:</label>\r\n                                        {!localStorage.getItem('user') ? \r\n                                                <input  type='date'\r\n                                                        {...register('age', {\r\n                                                                required: 'Відсутня дата народження користувача'\r\n                                                        })}\r\n                                                /> :\r\n                                                <input  type='date'\r\n                                                        {...register('age')}\r\n                                                />\r\n                                        }\r\n                                        {errors.age && <p className='error_message'>*Відсутня дата народження користувача</p>}\r\n                                </Form.Field>\r\n\r\n                                <Form.Field>\r\n                                        <label>Номер телефону:</label>\r\n                                        <p>Формат: 000-000-0000</p>\r\n                                        {!localStorage.getItem('user') ? \r\n                                                <input  type='tel'\r\n                                                        placeholder=\"Номер телефону\" \r\n                                                        {...register('phone', {\r\n                                                                required: 'Пропущено номер телефону'\r\n                                                        })}\r\n                                                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                                                /> : \r\n                                                <input  type='tel'\r\n                                                        placeholder=\"Номер телефону\" \r\n                                                        {...register('phone')}\r\n                                                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                                                />\r\n                                        }\r\n                                        {errors.phone && <p className='error_message'>*Неправильний номер</p>}\r\n                                </Form.Field>\r\n\r\n                                <Form.Field>\r\n                                        <label>Країна та регіон:</label>\r\n                                        <CountryDropdown\r\n                                                value={regionInfo.country}\r\n                                                onChange={(val) => setRegion(prev => {\r\n                                                        if (val !== prev.country) {\r\n                                                                return {country: val, region: '-'}       \r\n                                                        } else {\r\n                                                                return {...prev, country: val}\r\n                                                        }\r\n                                                })} \r\n                                        />\r\n                                        <RegionDropdown\r\n                                                country={regionInfo.country}\r\n                                                value={regionInfo.region}\r\n                                                onChange={(val) => setRegion(prev => {return {...prev, region: val }})} \r\n                                        />\r\n                                </Form.Field>\r\n\r\n                                {!localStorage.getItem('user') ? \r\n                                        <Form.Field className='btns_field'>\r\n                                                <Button className='cancel_btn' type='button' onClick={(e) => {\r\n                                                        e.preventDefault()\r\n                                                        navigate('/'); \r\n                                                        handleLogout()\r\n                                                }}>Скасувати</Button>\r\n                                                <Button className='submit_btn' type='submit'>Зберегти</Button>\r\n                                        </Form.Field> \r\n                                :\r\n                                        <Form.Field className='btns_field'>\r\n                                                <Button className='cancel_btn' type='button' onClick={() => {\r\n                                                        document.querySelector('.form_block').classList.toggle('non_active')\r\n                                                        reset({ firstname: '', lastname: '', age: '', phone: '',})\r\n                                                }}>Скасувати</Button>\r\n                                                <Button className='submit_btn' type='submit'>Зберегти</Button>\r\n                                        </Form.Field> \r\n                                }    \r\n                        </Form>\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default UserSettingForm;","import '../../styles/components/user-page.scss'\r\nimport UserSettingForm from \"./forms/userSettingsForm\";\r\nimport burgerImg from '../../img/burger_menu.png'\r\n\r\nimport { useEffect } from 'react';\r\n\r\nfunction UserProfile({userData, setUserSettings}) {\r\n    function openSttingForm() {\r\n        document.querySelector('.form_block').classList.toggle('non_active')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!document.querySelector('.menu_small_screen').classList.contains('hidden')) {\r\n            document.querySelector('.menu_small_screen').classList.add('hidden')\r\n            document.querySelector('.burger_btn_img').src = burgerImg\r\n        }\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"profile_page page\">\r\n            <h1 className='user__profile_title title'>Профіль</h1>\r\n\r\n            <div className='user__info_container'>\r\n                <div className='user_info'>\r\n                    <p>Ім'я: <span>{userData.firstname}</span></p>\r\n                    <p>Прізвище: <span>{userData.lastname}</span></p>\r\n                    <p>Дата народження: <span>{userData.age}</span></p>\r\n                    <p>Email: <span>{userData.email}</span></p>\r\n                    <p>Телефон: <span>{userData.phone}</span></p>\r\n                    <p>Країна: <span>{userData.country}</span></p>\r\n                    <p>Регіон: <span>{userData.region}</span></p>\r\n\r\n                    <button onClick={openSttingForm} className='open_setting_btn'>Налаштування</button>\r\n                </div>\r\n\r\n                <UserSettingForm setUserSettings={setUserSettings} nonActive={'non_active'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;"],"names":["setUserSettings","handleLogout","nonActive","useForm","register","reset","handleSubmit","errors","formState","useState","country","region","regionInfo","setRegion","navigate","useNavigate","className","onSubmit","data","localStorage","getItem","type","placeholder","maxLength","required","firstname","lastname","age","pattern","phone","value","onChange","val","prev","onClick","document","querySelector","classList","toggle","e","preventDefault","userData","useEffect","contains","add","src","burgerImg","email"],"sourceRoot":""}